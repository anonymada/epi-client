{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "DatabaseService",
            "id": "injectable-DatabaseService-8cc89e006d7d5c851cc0edff170094a131f3e6a16364c1f210461fbc1c3f3300387c103e2e162c7bade123a98b83129df64416a989c648dbf7cdbb53c7ba4787",
            "file": "src/app/services/database.service.ts",
            "properties": [
                {
                    "name": "dbPromise",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Promise<Database>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "methods": [
                {
                    "name": "_create",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Database>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        134
                    ]
                },
                {
                    "name": "get",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Database>",
                    "typeParameters": [],
                    "line": 275,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { addRxPlugin, blobToString, createBlob, createRxDatabase } from 'rxdb';\r\nimport { getRxStorageDexie } from 'rxdb/plugins/storage-dexie';\r\nimport { RxDBLeaderElectionPlugin } from 'rxdb/plugins/leader-election';\r\nimport { RxDBMigrationPlugin } from 'rxdb/plugins/migration-schema';\r\nimport { RxDBJsonDumpPlugin } from 'rxdb/plugins/json-dump';\r\nimport { RxDBQueryBuilderPlugin } from 'rxdb/plugins/query-builder';\r\nimport { BehaviorSubject, firstValueFrom } from 'rxjs';\r\nimport { RxDBAttachmentsPlugin } from 'rxdb/plugins/attachments';\r\nimport {\r\n  Database,\r\n  ProductCollection,\r\n  ProductCollectionMethods,\r\n  ProductDocMethods,\r\n  ProductDocument,\r\n  QuantityCollection,\r\n  QuantityCollectionMethods,\r\n  QuantityDocMethods,\r\n  QuantityDocument,\r\n  PriceCollection,\r\n  PriceCollectionMethods,\r\n  PriceDocMethods,\r\n  PriceDocument,\r\n  PriceSchema,\r\n  ProductSchema,\r\n  QuantitySchema,\r\n  DatabaseCollections,\r\n} from '../types/app.types';\r\nimport { formatDate } from '@angular/common';\r\n\r\naddRxPlugin(RxDBAttachmentsPlugin);\r\naddRxPlugin(RxDBJsonDumpPlugin);\r\naddRxPlugin(RxDBLeaderElectionPlugin);\r\naddRxPlugin(RxDBMigrationPlugin);\r\naddRxPlugin(RxDBQueryBuilderPlugin);\r\n\r\nconst ID_PARTS = 4;\r\nconst DATE_NOW = Date.now();\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DatabaseService {\r\n  static dbPromise: Promise<Database>;\r\n\r\n  constructor() {}\r\n\r\n  private async _create(): Promise<Database> {\r\n    // database initialization\r\n    console.log('DatabaseService >> creating database..');\r\n\r\n    const db: Database = await createRxDatabase({\r\n      name: 'appdb',\r\n      storage: getRxStorageDexie(),\r\n      ignoreDuplicate: true, //for tesT only\r\n    });\r\n\r\n    console.log('DatabaseService >> created database : ' + db.name);\r\n\r\n    // show leadership in title\r\n    db.waitForLeadership().then(() => {\r\n      document.title = 'üõçÔ∏è ' + document.title;\r\n    });\r\n\r\n    // definition of collections and dcouments methods\r\n    const productDocMethods: ProductDocMethods = {\r\n      addImage: function (\r\n        this: ProductDocument,\r\n        id: string,\r\n        data: any,\r\n        type: string\r\n      ): Promise<any> {\r\n        return this.putAttachment({\r\n          id: id,\r\n          data: createBlob(data, type),\r\n          type: type,\r\n        });\r\n      },\r\n\r\n      getImage: async function (\r\n        this: ProductDocument,\r\n        id: string\r\n      ): Promise<string> {\r\n        const attachement = this.getAttachment(id);\r\n        let blob: any;\r\n        if (attachement) {\r\n          blob = await attachement.getData();\r\n        } else blob = new Blob();\r\n        return blobToString(blob);\r\n      },\r\n    };\r\n\r\n    const productCollectionMethods: ProductCollectionMethods = {\r\n      listAllProducts: function (\r\n        this: ProductCollection\r\n      ): BehaviorSubject<ProductDocument[]> {\r\n        return this.find().$ as BehaviorSubject<ProductDocument[]>;\r\n      },\r\n\r\n      insertProduct: function (\r\n        this: ProductCollection,\r\n        newProduct: ProductDocument\r\n      ): Promise<ProductDocument> {\r\n        return this.insert(newProduct);\r\n      },\r\n\r\n      updateProduct: function (\r\n        this: ProductCollection,\r\n        p: ProductDocument\r\n      ): Promise<ProductDocument> {\r\n        return this.upsert(p);\r\n      },\r\n\r\n      deleteProduct: function (p: ProductDocument): Promise<ProductDocument> {\r\n        return p.remove();\r\n      },\r\n\r\n      getAllCategories: function (this: ProductCollection): string[] {\r\n        let categories: string[] = [];\r\n        this.find().$.subscribe((doc) => {\r\n          doc.forEach((p) => {\r\n            categories.push(p.category as string);\r\n          });\r\n        });\r\n        return [...new Set(categories)];\r\n      },\r\n\r\n      getAllConditionningType: function (this: ProductCollection): string[] {\r\n        let conditionningType: string[] = [];\r\n        this.find().$.subscribe((doc) => {\r\n          doc.forEach((p) => {\r\n            conditionningType.push(p.conditionningType as string);\r\n          });\r\n        });\r\n        return [...new Set(conditionningType)];\r\n      },\r\n\r\n      bulkDeleteProduct: function (ids: string[]): Promise<any> {\r\n        return db.products.bulkRemove(ids);\r\n      },\r\n\r\n      generateProductId: function (): string {\r\n        const stringArr = [];\r\n        for (let i = 0; i < ID_PARTS; i++) {\r\n          // tslint:disable-next-line:no-bitwise\r\n          const S4 = (((1 + Math.random()) * 0x10000) | 0)\r\n            .toString(16)\r\n            .substring(1);\r\n          stringArr.push(S4);\r\n        }\r\n        return stringArr.join('-');\r\n      },\r\n    };\r\n\r\n    const quantityDocMethods: QuantityDocMethods = {};\r\n\r\n    const quantityCollectionMethods: QuantityCollectionMethods = {\r\n      insertQuantity: function (\r\n        this: QuantityCollection,\r\n        q: QuantityDocument\r\n      ): Promise<QuantityDocument> {\r\n        const Q = Object.keys(QuantitySchema.properties).reduce(\r\n          (o, key) => Object.assign(o, { [key]: q[key as keyof typeof q] }),\r\n          {}\r\n        ) as QuantityDocument;\r\n        Q.quantityRegisteredDate = DATE_NOW;\r\n        console.log(Q);\r\n        return this.insert(Q);\r\n      },\r\n\r\n      generateQuantityId: function (): string {\r\n        const stringArr = [];\r\n        for (let i = 0; i < ID_PARTS; i++) {\r\n          // tslint:disable-next-line:no-bitwise\r\n          const S4 = (((1 + Math.random()) * 0x10000) | 0)\r\n            .toString(16)\r\n            .substring(1);\r\n          stringArr.push(S4);\r\n        }\r\n        return stringArr.join('-');\r\n      },\r\n\r\n      getProductQuantities: function (\r\n        this: QuantityCollection,\r\n        p: ProductDocument\r\n      ): Promise<QuantityDocument[]> {\r\n        const query = this.find()\r\n          .where('idProduct')\r\n          .eq(p.idProduct)\r\n          .sort('quantityRegisteredDate');\r\n        return firstValueFrom(query.$);\r\n      },\r\n    };\r\n\r\n    const priceDocMethods: PriceDocMethods = {};\r\n\r\n    const priceCollectionMethods: PriceCollectionMethods = {\r\n      insertPrice: async function (\r\n        this: PriceCollection,\r\n        p: PriceDocument\r\n      ): Promise<PriceDocument> {\r\n        const P = Object.keys(PriceSchema.properties).reduce(\r\n          (o, key) => Object.assign(o, { [key]: p[key as keyof typeof p] }),\r\n          {}\r\n        ) as PriceDocument;\r\n        P.priceRegisteredDate = DATE_NOW;\r\n        console.log(P);\r\n        return this.insert(P);\r\n      },\r\n\r\n      generatePriceId: function (): string {\r\n        const stringArr = [];\r\n        for (let i = 0; i < ID_PARTS; i++) {\r\n          // tslint:disable-next-line:no-bitwise\r\n          const S4 = (((1 + Math.random()) * 0x10000) | 0)\r\n            .toString(16)\r\n            .substring(1);\r\n          stringArr.push(S4);\r\n        }\r\n        return stringArr.join('-');\r\n      },\r\n\r\n      getProductPrices: function (\r\n        this: PriceCollection,\r\n        p: ProductDocument\r\n      ): Promise<PriceDocument[]> {\r\n        const query = this.find()\r\n          .where('idProduct')\r\n          .eq(p.idProduct)\r\n          .sort('priceRegisteredDate');\r\n        return firstValueFrom(query.$);\r\n      },\r\n    };\r\n\r\n    // add database collections\r\n    console.log('DatabaseService >> creating collections ...');\r\n\r\n    const collection = await db.addCollections({\r\n      products: {\r\n        schema: ProductSchema,\r\n        methods: productDocMethods,\r\n        statics: productCollectionMethods,\r\n        // migrationStrategies: {\r\n        //   1: function (oldDoc) {\r\n        //     return oldDoc;\r\n        //   },\r\n        // },\r\n      },\r\n      prices: {\r\n        schema: PriceSchema,\r\n        methods: priceDocMethods,\r\n        statics: priceCollectionMethods,\r\n      },\r\n      quantities: {\r\n        schema: QuantitySchema,\r\n        methods: quantityDocMethods,\r\n        statics: quantityCollectionMethods,\r\n      },\r\n    });\r\n\r\n    console.log(\r\n      'DatabaseService >> created collections  : ' +\r\n        collection.products.name +\r\n        ', ' +\r\n        collection.prices.name +\r\n        ', ' +\r\n        collection.quantities.name\r\n    );\r\n\r\n    // collection.prices.exportJSON().then((json) => console.dir(json));\r\n\r\n    return db;\r\n  }\r\n\r\n  get(): Promise<Database> {\r\n    if (DatabaseService.dbPromise) return DatabaseService.dbPromise;\r\n    DatabaseService.dbPromise = this._create();\r\n    return DatabaseService.dbPromise;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 44
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "AddListAttributeDirective",
            "id": "directive-AddListAttributeDirective-01dfe863d57db1f4681da0f5afe25f092b95f03067af3f3911ca01ef2a926a8fb37d8ec557f1b9fe0c95891b8d9fe3e49fb956624a4ffd62c95edb4188a56365",
            "file": "src/app/directives/add-list-attribute.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, Renderer2 } from '@angular/core';\r\nimport { IonInput } from '@ionic/angular/standalone';\r\n\r\n@Directive({\r\n  selector: '[appAddListAttribute]',\r\n  standalone: true,\r\n})\r\nexport class AddListAttributeDirective implements AfterViewInit {\r\n  constructor(private el: IonInput, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.getInputElement(this.el);\r\n  }\r\n\r\n  getInputElement(elRef: IonInput) {\r\n    elRef.getInputElement().then((input: HTMLInputElement) => {\r\n      this.renderer.setAttribute(input, 'list', 'idOfdataList');\r\n    });\r\n  }\r\n}\r\n",
            "selector": "[appAddListAttribute]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getInputElement",
                    "args": [
                        {
                            "name": "elRef",
                            "type": "IonInput",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elRef",
                            "type": "IonInput",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "IonInput",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "IonInput",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "LongpressDirective",
            "id": "directive-LongpressDirective-8fec4b775ccc8889c943697cd2eb76df6d30fab1a9fafc36db0c103457294cfc2bf8f1aaca645f3e3afa503bcbfb519429bdd8c04b964ceff4b6c1a60029c521",
            "file": "src/app/directives/longpress.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  AfterViewInit,\r\n  NgZone,\r\n  EventEmitter,\r\n  Output,\r\n} from '@angular/core';\r\nimport { GestureController } from '@ionic/angular/standalone';\r\n\r\n@Directive({\r\n  selector: '[appLongpress]',\r\n  standalone: true,\r\n})\r\nexport class LongpressDirective implements AfterViewInit {\r\n  @Output() press = new EventEmitter();\r\n  @Input() delay = 800;\r\n  action: any; //not stacking actions\r\n\r\n  private longPressActive = false;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private gestureCtrl: GestureController,\r\n    private zone: NgZone\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.loadLongPressOnElement();\r\n  }\r\n\r\n  loadLongPressOnElement() {\r\n    const gesture = this.gestureCtrl.create({\r\n      el: this.el.nativeElement,\r\n      threshold: 0,\r\n      gestureName: 'long-press',\r\n      onStart: (ev) => {\r\n        this.longPressActive = true;\r\n        this.longPressAction();\r\n      },\r\n      onEnd: (ev) => {\r\n        this.longPressActive = false;\r\n      },\r\n    });\r\n    gesture.enable(true);\r\n  }\r\n\r\n  private longPressAction() {\r\n    if (this.action) {\r\n      clearInterval(this.action);\r\n    }\r\n    this.action = setTimeout(() => {\r\n      this.zone.run(() => {\r\n        if (this.longPressActive === true) {\r\n          this.longPressActive = false;\r\n          this.press.emit();\r\n        }\r\n      });\r\n    }, this.delay);\r\n  }\r\n}\r\n",
            "selector": "[appLongpress]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "delay",
                    "defaultValue": "800",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "press",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "longPressActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadLongPressOnElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "longPressAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "gestureCtrl",
                        "type": "GestureController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "gestureCtrl",
                        "type": "GestureController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1553af75f7e2433e75202c237f2b2872fca3abf5d9379a34b9771a5e07efd45d66c7500cc411a1b3d9e7b9c0347f9356d9f49ae28f761baa7081412c467f215f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonApp"
                },
                {
                    "name": "IonRouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonApp, IonRouterOutlet } from '@ionic/angular/standalone';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  standalone: true,\n  imports: [IonApp, IonRouterOutlet],\n})\nexport class AppComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "extends": [],
            "templateData": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "CalculatorComponent",
            "id": "component-CalculatorComponent-d40e27f4ef6ccc05d5c6b439f93cf2873637dbe84dd48136454aa06c509c070fb2a1e25c759e20f2c474b9952745ffdd1b3ad62a8764fd5e12a273ec08f1fc3a",
            "file": "src/app/components/calculator/calculator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-calculator",
            "styleUrls": [
                "./calculator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calculator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "calculatorResult",
                    "defaultValue": "new EventEmitter<Number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "input",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "ionInputEl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IonInput",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'ionInputEl', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "result",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "allClear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "calcAnswer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAnswer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLastOperand",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pressNum",
                    "args": [
                        {
                            "name": "num",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "num",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pressOperator",
                    "args": [
                        {
                            "name": "op",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "op",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonInput"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonGrid"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "IonLabel"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { backspace } from 'ionicons/icons';\r\nimport { addIcons } from 'ionicons';\r\nimport {\r\n  IonLabel,\r\n  IonButton,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonIcon,\r\n  IonInput,\r\n} from '@ionic/angular/standalone';\r\n\r\n@Component({\r\n  selector: 'app-calculator',\r\n  templateUrl: './calculator.component.html',\r\n  styleUrls: ['./calculator.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonInput,\r\n    IonIcon,\r\n    IonCol,\r\n    IonRow,\r\n    IonGrid,\r\n    IonButton,\r\n    CommonModule,\r\n    IonLabel,\r\n  ],\r\n})\r\nexport class CalculatorComponent implements OnInit {\r\n  @ViewChild('ionInputEl', { static: true }) ionInputEl!: IonInput;\r\n  @Output() calculatorResult = new EventEmitter<Number>();\r\n  input: any = '';\r\n  result: any;\r\n\r\n  constructor() {\r\n    addIcons({ backspace });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  pressNum(num: string) {\r\n    //Do Not Allow . more than once\r\n    if (num == '.') {\r\n      if (this.input != '') {\r\n        const lastNum = this.getLastOperand();\r\n        if (lastNum.lastIndexOf('.') >= 0) return;\r\n      }\r\n    }\r\n\r\n    //Do Not Allow 0 at beginning.\r\n    //Javascript will throw Octal literals are not allowed in strict mode.\r\n    if (num == '0') {\r\n      if (this.input == '') {\r\n        return;\r\n      }\r\n      const PrevKey = this.input[this.input.length - 1];\r\n      if (\r\n        PrevKey === '/' ||\r\n        PrevKey === '*' ||\r\n        PrevKey === '-' ||\r\n        PrevKey === '+'\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.input = this.input + num;\r\n    this.ionInputEl.value = this.input;\r\n    this.calcAnswer();\r\n  }\r\n\r\n  getLastOperand() {\r\n    let pos: number;\r\n    pos = this.input.toString().lastIndexOf('+');\r\n    if (this.input.toString().lastIndexOf('-') > pos)\r\n      pos = this.input.lastIndexOf('-');\r\n    if (this.input.toString().lastIndexOf('*') > pos)\r\n      pos = this.input.lastIndexOf('*');\r\n    if (this.input.toString().lastIndexOf('/') > pos)\r\n      pos = this.input.lastIndexOf('/');\r\n    return this.input.substr(pos + 1);\r\n    this.ionInputEl.value = this.input;\r\n  }\r\n\r\n  pressOperator(op: string) {\r\n    //Do not allow operators more than once\r\n    const lastKey = this.input[this.input.length - 1];\r\n    if (\r\n      lastKey === '/' ||\r\n      lastKey === '*' ||\r\n      lastKey === '-' ||\r\n      lastKey === '+'\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.input = this.input + op;\r\n    this.ionInputEl.value = this.input;\r\n    this.calcAnswer();\r\n  }\r\n\r\n  clear() {\r\n    if (this.input != '') {\r\n      this.input = this.input.substr(0, this.input.length - 1);\r\n    }\r\n    this.ionInputEl.value = this.input;\r\n  }\r\n\r\n  allClear() {\r\n    this.result = '';\r\n    this.input = '';\r\n    this.ionInputEl.value = this.input;\r\n  }\r\n\r\n  calcAnswer() {\r\n    let formula = this.input;\r\n\r\n    let lastKey = formula[formula.length - 1];\r\n\r\n    if (lastKey === '.') {\r\n      formula = formula.substr(0, formula.length - 1);\r\n    }\r\n\r\n    lastKey = formula[formula.length - 1];\r\n\r\n    if (\r\n      lastKey === '/' ||\r\n      lastKey === '*' ||\r\n      lastKey === '-' ||\r\n      lastKey === '+' ||\r\n      lastKey === '.'\r\n    ) {\r\n      formula = formula.substr(0, formula.length - 1);\r\n    }\r\n    var indirectEval = eval;\r\n    this.result = indirectEval(formula);\r\n    this.ionInputEl.value = this.input;\r\n  }\r\n\r\n  getAnswer() {\r\n    this.calcAnswer();\r\n    this.input = this.result;\r\n    if (this.input == '0') this.input = '';\r\n    this.calculatorResult.emit(this.result);\r\n    this.ionInputEl.value = this.input;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-button{\r\n    width: 100%;\r\n}\r\n\r\nion-input{\r\n    --background: #373737;\r\n    --color: #fff;\r\n    --placeholder-color: #ddd;\r\n    --placeholder-opacity: 0.8;\r\n    --padding-bottom: 10px;\r\n    --padding-end: 10px;\r\n    --padding-start: 10px;\r\n    --padding-top: 10px;\r\n    font-size: large;\r\n}\r\n\r\nion-input.custom.ios .input-bottom .helper-text,\r\nion-input.custom.ios .input-bottom .counter,\r\nion-input.custom.md .input-bottom .helper-text,\r\nion-input.custom.md .input-bottom .counter {\r\n    color: var(--ion-color-primary);\r\n}",
                    "styleUrl": "./calculator.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 41
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-grid>\r\n  <ion-row>\r\n    <ion-col size=\"12\">\r\n      <ion-input #ionInputEl fill=\"outline\" placeholder=\"0\" disabled=\"true\">\r\n      </ion-input>\r\n    </ion-col>\r\n  </ion-row>\r\n\r\n  <ion-row>\r\n    <ion-col size=\"6\">\r\n      <ion-button color=\"danger\" type=\"ion-button\" (click)=\"allClear()\">\r\n        C\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"warning\" type=\"ion-button\" (click)=\"clear()\">\r\n        <ion-icon name=\"backspace\"></ion-icon>\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressOperator('/')\">\r\n        /\r\n      </ion-button>\r\n    </ion-col>\r\n  </ion-row>\r\n\r\n  <ion-row>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('7')\">\r\n        7\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('8')\">\r\n        8\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('9')\">\r\n        9\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressOperator('*')\">\r\n        X\r\n      </ion-button>\r\n    </ion-col>\r\n  </ion-row>\r\n\r\n  <ion-row>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('4')\">\r\n        4\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('5')\">\r\n        5\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('6')\">\r\n        6\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressOperator('-')\">\r\n        -\r\n      </ion-button>\r\n    </ion-col>\r\n  </ion-row>\r\n\r\n  <ion-row>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('1')\">\r\n        1\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('2')\">\r\n        2\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('3')\">\r\n        3\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressOperator('+')\">\r\n        +\r\n      </ion-button>\r\n    </ion-col>\r\n  </ion-row>\r\n\r\n  <ion-row>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('.')\">\r\n        .\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"3\">\r\n      <ion-button color=\"light\" type=\"ion-button\" (click)=\"pressNum('0')\">\r\n        0\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"6\">\r\n      <ion-button color=\"primary\" pe=\"ion-button\" (click)=\"getAnswer()\">\r\n        =\r\n      </ion-button>\r\n    </ion-col>\r\n  </ion-row>\r\n</ion-grid>\r\n"
        },
        {
            "name": "CustomSelectComponent",
            "id": "component-CustomSelectComponent-97029efd2b9b9e3d8ae2ed00108bf70c25062718a23056a751f801bc4953db5e045320fda5b325dba0b60c9a6bf76af4895ae02ce60cf7a1859ec069fcf2dee9",
            "file": "src/app/components/custom-select/custom-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-select",
            "styleUrls": [
                "./custom-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectedOption",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showDatalist",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "addNewOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onInputChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectOption",
                    "args": [
                        {
                            "name": "option",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonLabel"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IonItem, IonLabel } from '@ionic/angular/standalone';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n@Component({\r\n  selector: 'app-custom-select',\r\n  templateUrl: './custom-select.component.html',\r\n  styleUrls: ['./custom-select.component.scss'],\r\n  standalone: true,\r\n  imports: [IonItem, IonLabel, FormsModule, CommonModule],\r\n})\r\nexport class CustomSelectComponent {\r\n  @Input() options: string[] = []; // Les options existantes\r\n  @Input() label: string = ''; // L'√©tiquette du champ\r\n  @Output() selectionChange = new EventEmitter<string>(); // √âv√©nement de s√©lection\r\n\r\n  selectedOption: string = '';\r\n  filteredOptions: string[] = [];\r\n  showDatalist: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  // Filtrer les options en fonction de l'entr√©e\r\n  onInputChange() {\r\n    this.filteredOptions = this.options.filter((option) =>\r\n      option.toLowerCase().includes(this.selectedOption.toLowerCase())\r\n    );\r\n    this.showDatalist =\r\n      this.selectedOption.trim() !== '' && this.filteredOptions.length > 0;\r\n  }\r\n\r\n  // S√©lectionner une option dans la liste\r\n  selectOption(option: string) {\r\n    this.selectedOption = option;\r\n    this.showDatalist = false;\r\n    this.emitSelection();\r\n  }\r\n\r\n  // Ajouter une nouvelle option\r\n  addNewOption() {\r\n    if (this.selectedOption && !this.options.includes(this.selectedOption)) {\r\n      this.options.push(this.selectedOption);\r\n      this.showDatalist = false;\r\n      this.emitSelection();\r\n    }\r\n  }\r\n\r\n  // √âmettre l'√©v√©nement de s√©lection\r\n  emitSelection() {\r\n    this.selectionChange.emit(this.selectedOption);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Positionner et styliser la liste des options */\r\n.custom-datalist {\r\n  position: absolute;\r\n  top: 100%; /* Placer juste sous l'input */\r\n  left: 0;\r\n  right: 0;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  background: white;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  z-index: 10;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* Styliser les √©l√©ments de la liste */\r\n.custom-datalist ul {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.custom-datalist li {\r\n  padding: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.custom-datalist li:hover {\r\n  background: #f0f0f0;\r\n}\r\n",
                    "styleUrl": "./custom-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": [],
            "templateData": "<ion-item>\r\n  <ion-label position=\"floating\">{{ label }}</ion-label>\r\n  <input\r\n    type=\"text\"\r\n    [(ngModel)]=\"selectedOption\"\r\n    (input)=\"onInputChange()\"\r\n    (focus)=\"showDatalist = true\"\r\n  />\r\n</ion-item>\r\n\r\n<!-- Datalist personnalis√© en tant que conteneur -->\r\n<div *ngIf=\"showDatalist\" class=\"custom-datalist\">\r\n  <ul>\r\n    <li *ngFor=\"let option of filteredOptions\" (click)=\"selectOption(option)\">\r\n      {{ option }}\r\n    </li>\r\n    <li\r\n      *ngIf=\"!filteredOptions.includes(selectedOption)\"\r\n      (click)=\"addNewOption()\"\r\n    >\r\n      Ajouter \"{{ selectedOption }}\"\r\n    </li>\r\n  </ul>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HearderComponent",
            "id": "component-HearderComponent-d5b72658d0336e779d8255dde11a4608d5e9b3297459151e20381ee6b6e343616676e4e6ccce1d03d76b523b9b5b23d1d319ee783d81fb81661bdfef3b424411",
            "file": "src/app/components/hearder/hearder.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-hearder",
            "styleUrls": [
                "./hearder.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./hearder.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "pageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonButtons"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "KebabMenuComponent",
                    "type": "component"
                },
                {
                    "name": "I18NComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport {\r\n  IonHeader,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonButtons,\r\n} from '@ionic/angular/standalone';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { KebabMenuComponent } from '../kebab-menu/kebab-menu.component';\r\nimport { I18NComponent } from '../i18-n/i18-n.component';\r\n\r\n@Component({\r\n  selector: 'app-hearder',\r\n  templateUrl: './hearder.component.html',\r\n  styleUrls: ['./hearder.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonButtons,\r\n    IonHeader,\r\n    IonTitle,\r\n    IonToolbar,\r\n    TranslateModule,\r\n    KebabMenuComponent,\r\n    I18NComponent,\r\n  ],\r\n})\r\nexport class HearderComponent implements OnInit {\r\n  @Input() pageTitle!: string;\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./hearder.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 28
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header [translucent]=\"true\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title> {{ pageTitle | translate }} </ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <app-i18-n> </app-i18-n>\r\n    </ion-buttons>\r\n\r\n    <ion-buttons slot=\"end\">\r\n      <app-kebab-menu></app-kebab-menu>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n"
        },
        {
            "name": "I18NComponent",
            "id": "component-I18NComponent-3c6b30364b89dbf04c6dc8bdea318caf25cf3be2334552d716829a1d03f9ffa02a7fe7f6ec22b66f17c6f25b7f3326edb18eab740097c807c3d6157eac83a8cf",
            "file": "src/app/components/i18-n/i18-n.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-i18-n",
            "styleUrls": [
                "./i18-n.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./i18-n.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "langDict",
                    "defaultValue": "{\r\n    fr: 'GLOBAL.FRENCH',\r\n    mg: 'GLOBAL.MALAGASY',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "langSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "popover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popover'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "langPicker",
                    "args": [
                        {
                            "name": "lang",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "presentPopover",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonList"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonPopover"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  IonButton,\r\n  IonPopover,\r\n  IonContent,\r\n  IonList,\r\n  IonItem,\r\n  IonIcon,\r\n} from '@ionic/angular/standalone';\r\n\r\n@Component({\r\n  selector: 'app-i18-n',\r\n  templateUrl: './i18-n.component.html',\r\n  styleUrls: ['./i18-n.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonIcon,\r\n    IonItem,\r\n    IonList,\r\n    IonContent,\r\n    IonPopover,\r\n    IonButton,\r\n    CommonModule,\r\n    TranslateModule,\r\n  ],\r\n})\r\nexport class I18NComponent implements OnInit {\r\n  @ViewChild('popover') popover: { event: Event } | undefined;\r\n  isOpen = false;\r\n  langDict = {\r\n    fr: 'GLOBAL.FRENCH',\r\n    mg: 'GLOBAL.MALAGASY',\r\n  };\r\n\r\n  langSelected: any;\r\n\r\n  constructor(public translate: TranslateService) {\r\n    console.log(this.langSelected);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (localStorage['language'] == undefined) {\r\n      this.langPicker('fr');\r\n    } else {\r\n      this.langPicker(localStorage['language']);\r\n    }\r\n  }\r\n\r\n  langPicker(lang: any) {\r\n    this.translate.use(lang);\r\n    this.langSelected = lang;\r\n    localStorage['language'] = lang;\r\n  }\r\n\r\n  presentPopover(e: Event) {\r\n    this.popover!.event = e;\r\n    this.isOpen = true;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./i18-n.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-button\r\n  (click)=\"presentPopover($event)\"\r\n  fill=\"clear\"\r\n  shape=\"round\"\r\n  size=\"medium\"\r\n>\r\n  <span class=\"fi fi-{{ langSelected }}\"></span>\r\n</ion-button>\r\n<ion-popover\r\n  #popover\r\n  [isOpen]=\"isOpen\"\r\n  (didDismiss)=\"isOpen = false\"\r\n  [dismissOnSelect]=\"true\"\r\n  size=\"auto\"\r\n>\r\n  <ng-template>\r\n    <ion-content>\r\n      <ion-list\r\n        lines=\"none\"\r\n        class=\"ion-no-padding\"\r\n        *ngFor=\"let lang of langDict | keyvalue\"\r\n      >\r\n        <ion-item\r\n          [button]=\"true\"\r\n          [detail]=\"false\"\r\n          (click)=\"langPicker(lang.key)\"\r\n        >\r\n          <ion-icon class=\"fi fi-{{ lang.key }}\"></ion-icon>&nbsp;\r\n          {{ lang.value | translate }}\r\n        </ion-item>\r\n      </ion-list>\r\n    </ion-content>\r\n  </ng-template>\r\n</ion-popover>\r\n"
        },
        {
            "name": "KebabMenuComponent",
            "id": "component-KebabMenuComponent-a6b175edb5900152def82cb8ab07384f2160774cd38dd98753c691d7cf2df96b87565319c002c7f014b12e6e7ab3a299a6c91200de64742db3a94bd53725d97c",
            "file": "src/app/components/kebab-menu/kebab-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-kebab-menu",
            "styleUrls": [
                "./kebab-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./kebab-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "popover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'popover'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "presentPopover",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonList"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonPopover"
                },
                {
                    "name": "I18NComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  IonButton,\r\n  IonPopover,\r\n  IonContent,\r\n  IonIcon,\r\n  IonList,\r\n  IonItem,\r\n} from '@ionic/angular/standalone';\r\nimport { addIcons } from 'ionicons';\r\nimport { ellipsisVertical } from 'ionicons/icons';\r\nimport { I18NComponent } from '../i18-n/i18-n.component';\r\n\r\n@Component({\r\n  selector: 'app-kebab-menu',\r\n  templateUrl: './kebab-menu.component.html',\r\n  styleUrls: ['./kebab-menu.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonItem,\r\n    IonList,\r\n    IonIcon,\r\n    IonContent,\r\n    IonButton,\r\n    IonPopover,\r\n    I18NComponent,\r\n  ],\r\n})\r\nexport class KebabMenuComponent implements OnInit {\r\n  @ViewChild('popover') popover: { event: Event } | undefined;\r\n  isOpen = false;\r\n\r\n  constructor() {\r\n    addIcons({\r\n      ellipsisVertical,\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  presentPopover(e: Event) {\r\n    this.popover!.event = e;\r\n    this.isOpen = true;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./kebab-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 31
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-button (click)=\"presentPopover($event)\" shape=\"round\" size=\"medium\">\r\n  <span>\r\n    <ion-icon name=\"ellipsis-vertical\" slot=\"icon-only\"></ion-icon>\r\n  </span>\r\n</ion-button>\r\n<ion-popover\r\n  #popover\r\n  [isOpen]=\"isOpen\"\r\n  (didDismiss)=\"isOpen = false\"\r\n  [dismissOnSelect]=\"true\"\r\n  size=\"auto\"\r\n>\r\n  <ng-template>\r\n    <ion-content>\r\n      <ion-list>\r\n        <ion-item [button]=\"true\" [detail]=\"false\">Option 1</ion-item>\r\n        <ion-item [button]=\"true\" [detail]=\"false\">Option 2</ion-item>\r\n      </ion-list>\r\n    </ion-content>\r\n  </ng-template>\r\n</ion-popover>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PhotoComponent",
            "id": "component-PhotoComponent-74ca4e1fe13871004243aa725d54bf1b2a14561f79b3da13284f6f4f3671778b552113657e6d3460206cc50bb7db15a526b2619294a98271f7d070c0e65cfb1c",
            "file": "src/app/components/photo/photo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-photo",
            "styleUrls": [
                "./photo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./photo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "fabTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "newPhoto",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "addPhoto",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonFabButton"
                },
                {
                    "name": "IonFab"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport {\r\n  IonFab,\r\n  IonFabButton,\r\n  IonIcon,\r\n  IonButton,\r\n  IonContent,\r\n} from '@ionic/angular/standalone';\r\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\r\nimport { camera } from 'ionicons/icons';\r\nimport { addIcons } from 'ionicons';\r\n\r\n@Component({\r\n  selector: 'app-photo',\r\n  templateUrl: './photo.component.html',\r\n  styleUrls: ['./photo.component.scss'],\r\n  standalone: true,\r\n  imports: [IonContent, IonButton, IonIcon, IonFabButton, IonFab, CommonModule],\r\n})\r\nexport class PhotoComponent {\r\n  @Output() newPhoto = new EventEmitter<string>();\r\n  @Input() fabTitle: string = '';\r\n\r\n  constructor() {\r\n    addIcons({ camera });\r\n  }\r\n\r\n  addPhoto() {\r\n    Camera.getPhoto({\r\n      resultType: CameraResultType.DataUrl,\r\n      source: CameraSource.Camera,\r\n      promptLabelHeader: 'Image du Produit',\r\n      promptLabelPhoto: 'Gallerie',\r\n      promptLabelPicture: 'Appareil photo',\r\n      promptLabelCancel: 'Annuler',\r\n      quality: 100,\r\n      height: 75,\r\n      width: 75,\r\n    })\r\n      .then((photo) => {\r\n        this.newPhoto.emit(photo.dataUrl);\r\n      })\r\n      .catch((Error) => {\r\n        console.log(Error);\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./photo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "extends": [],
            "templateData": "<ion-button shape=\"round\" (click)=\"addPhoto()\">\r\n  <ion-icon name=\"camera\" size=\"large\"></ion-icon>\r\n</ion-button>\r\n<br />\r\n"
        },
        {
            "name": "ProductCardComponent",
            "id": "component-ProductCardComponent-8c554431cbbe4b47aef5b92203598ec6266cd681180beb3c19f2ce2d658fca31450bf9a64c7ce09e02484a8bb0c3e703e9bb3965c0c97201dead414e72cb3ccc",
            "file": "src/app/components/product-card/product-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-card",
            "styleUrls": [
                "./product-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "cardId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "ProductDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "longPress",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "shortPress",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "productImage",
                    "defaultValue": "'../../../assets/images/products.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "selectedCard",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "sellingPrice",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "stockQuantity",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "onLongPress",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPress",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonButtons"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonBadge"
                },
                {
                    "name": "IonLabel"
                },
                {
                    "name": "IonThumbnail"
                },
                {
                    "name": "IonModal"
                },
                {
                    "name": "IonCardSubtitle"
                },
                {
                    "name": "IonCardTitle"
                },
                {
                    "name": "IonCardHeader"
                },
                {
                    "name": "IonCard"
                },
                {
                    "name": "IonCardContent"
                },
                {
                    "name": "LongpressDirective",
                    "type": "directive"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport {\r\n  IonCard,\r\n  IonThumbnail,\r\n  IonCardContent,\r\n  IonCardHeader,\r\n  IonCardTitle,\r\n  IonCardSubtitle,\r\n  IonModal,\r\n  IonToolbar,\r\n  IonBadge,\r\n  IonLabel,\r\n  IonButtons,\r\n  IonButton,\r\n  IonHeader,\r\n  IonTitle,\r\n  IonContent,\r\n} from '@ionic/angular/standalone';\r\nimport { LongpressDirective } from 'src/app/directives/longpress.directive';\r\nimport { ProductDocument } from 'src/app/types/app.types';\r\nimport 'animate.css';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-product-card',\r\n  templateUrl: './product-card.component.html',\r\n  styleUrls: ['./product-card.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonContent,\r\n    IonTitle,\r\n    IonHeader,\r\n    IonButton,\r\n    IonButtons,\r\n    IonToolbar,\r\n    IonBadge,\r\n    IonLabel,\r\n    IonThumbnail,\r\n    IonModal,\r\n    IonCardSubtitle,\r\n    IonCardTitle,\r\n    IonCardHeader,\r\n    IonCard,\r\n    IonCardContent,\r\n    LongpressDirective,\r\n    CommonModule,\r\n    TranslateModule,\r\n  ],\r\n})\r\nexport class ProductCardComponent implements OnInit {\r\n  @Input() item!: ProductDocument;\r\n  @Input() cardId!: string;\r\n  @Output() shortPress = new EventEmitter();\r\n  @Output() longPress = new EventEmitter();\r\n  db: any;\r\n  sellingPrice: number = 0;\r\n  stockQuantity: number = 0;\r\n\r\n  productImage: string = '../../../assets/images/products.png';\r\n  selectedCard: boolean = false;\r\n\r\n  constructor(private databaseService: DatabaseService) {}\r\n\r\n  async ngOnInit() {\r\n    this.db = await this.databaseService.get();\r\n    this.item.getImage(this.item.idProduct).then((image) => {\r\n      this.productImage = image;\r\n    });\r\n    this.selectedCard = false;\r\n\r\n    //le dernier prix enregistr√©\r\n    this.sellingPrice = (await this.db.prices.getProductPrices(this.item))[\r\n      (await this.db.prices.getProductPrices(this.item)).length - 1\r\n    ]['sellingPrice'];\r\n\r\n    //la derni√®re quantit√© en stock\r\n    this.stockQuantity = (\r\n      await this.db.quantities.getProductQuantities(this.item)\r\n    )[(await this.db.quantities.getProductQuantities(this.item)).length - 1][\r\n      'stockQuantity'\r\n    ];\r\n  }\r\n\r\n  onPress() {\r\n    this.shortPress.emit();\r\n  }\r\n\r\n  onLongPress() {\r\n    if (!this.selectedCard) {\r\n      this.selectedCard = true;\r\n    } else {\r\n      this.selectedCard = false;\r\n    }\r\n    this.longPress.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-card {\r\n  width: 100%;\r\n  height: 250px;\r\n  margin: 0px;\r\n  margin-top: 2%;\r\n  margin-bottom: 2%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  border-radius: 10px;\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\r\n  // background-color: rgb(255, 255, 255);\r\n  overflow: hidden;\r\n}\r\n\r\nion-card-title {\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  z-index: 1; /* Le texte reste au-dessus du fond */\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\nion-card-header {\r\n  height: calc(100% / 4); /* 1/6 de la hauteur de la carte */\r\n  display: flex;\r\n  padding: 10px;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\nion-card-subtitle {\r\n  font-size: 1rem;\r\n  text-align: right;\r\n  z-index: 1; /* Le texte reste au-dessus du fond */\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\nion-card-header {\r\n  height: calc(100% / 4); /* 1/6 de la hauteur de la carte */\r\n  display: flex;\r\n  padding: 10px;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.product-content {\r\n  height: calc(100% * 3 / 4); /* 2/3 de la hauteur de la carte */\r\n  display: flex;\r\n  align-items: center; /* Centrer verticalement le contenu */\r\n  padding-left: 5px; /* Distance par rapport au c√¥t√© gauche */\r\n  padding-right: 10px;\r\n}\r\n\r\n.stock-label {\r\n  position: relative;\r\n  z-index: 1;\r\n  background: linear-gradient(135deg, #95da85 0%, #25d366 50%, #25d370 100%);\r\n  padding: 5px 15px;\r\n  border-top-right-radius: 15px;\r\n  border-bottom-right-radius: 15px;\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.price-label {\r\n  position: absolute; /* Positionnement absolu */\r\n  bottom: 10px; /* Distance du bas */\r\n  right: 10px; /* Distance de droite */\r\n  z-index: 1;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  border-top-left-radius: 15px;\r\n  border-bottom-left-radius: 15px;\r\n  color: black;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  background: linear-gradient(135deg, #3b5960 0%, #3b5998 50%, #3b5960 100%);\r\n}\r\n\r\n.product-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-size: cover;\r\n  background-position: center;\r\n  filter: brightness(70%);\r\n}\r\n",
                    "styleUrl": "./product-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-card\r\n  id=\"{{ cardId }}\"\r\n  appLongpress\r\n  (press)=\"onLongPress()\"\r\n  (click)=\"onPress()\"\r\n  [ngClass]=\"\r\n    selectedCard ? 'animate__animated animate__pulse animate__infinite' : 'card'\r\n  \"\r\n>\r\n  <ion-card-header class=\"product-header\">\r\n    <ion-card-title>{{ item.name }}</ion-card-title>\r\n    <ion-card-subtitle>[{{ item.conditionningType }}]</ion-card-subtitle>\r\n  </ion-card-header>\r\n\r\n  <ion-card-content class=\"product-content\">\r\n    <div\r\n      class=\"product-image\"\r\n      [ngStyle]=\"{ 'background-image': 'url(' + productImage + ')' }\"\r\n    ></div>\r\n    <div class=\"stock-label\">\r\n      {{ \"PRODUCT.INSTOCK\" | translate }} : {{ stockQuantity }}\r\n    </div>\r\n    <div class=\"price-label\">\r\n      {{ sellingPrice | currency : \"Ar \" : \"symbol\" : \"1.0-0\" }}\r\n    </div>\r\n  </ion-card-content>\r\n</ion-card>\r\n"
        },
        {
            "name": "ProductInsertComponent",
            "id": "component-ProductInsertComponent-542dad0c5e51b54e1e6b772bb001bf124d6e57ff585623251e1b5090b855fe8b7c410a1776d2b665d2ef4d395c299ede7da210e75130f3c360b392c3f8ede187",
            "file": "src/app/components/product-insert/product-insert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-insert",
            "styleUrls": [
                "./product-insert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-insert.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isAdd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "ProductDocument",
                    "decorators": []
                },
                {
                    "name": "itemPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "PriceDocument",
                    "decorators": []
                },
                {
                    "name": "itemQuantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "QuantityDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buyingPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IonInput",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'buyingPrice', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "isAddingCategory",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "productCategory",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "productConditionningType",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "productForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "productImageBase64String",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "productImageEl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLImageElement",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productImageType",
                    "defaultValue": "'text/plain'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sellingPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IonInput",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sellingPrice', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "uniteMonetaire",
                    "defaultValue": "'[Ariary]'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateField",
                    "args": [
                        {
                            "name": "ev",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 185,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculateProfitMargin",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculateSoldQuantity",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changePhoto",
                    "args": [
                        {
                            "name": "imageBase64",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "imageBase64",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "item",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fixDatalistPosition",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 297,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getBase64DefaultProductImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 285,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeForms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 306,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "showProductStats",
                    "args": [
                        {
                            "name": "product",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 333,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonPopover"
                },
                {
                    "name": "IonLabel"
                },
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonAccordion"
                },
                {
                    "name": "IonAccordionGroup"
                },
                {
                    "name": "IonTextarea"
                },
                {
                    "name": "IonFooter"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonGrid"
                },
                {
                    "name": "IonThumbnail"
                },
                {
                    "name": "IonLoading"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonInput"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NgPipesModule",
                    "type": "pipe"
                },
                {
                    "name": "PhotoComponent",
                    "type": "component"
                },
                {
                    "name": "HttpClientModule",
                    "type": "module"
                },
                {
                    "name": "CalculatorComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  calculator,\r\n  trashBin,\r\n  arrowBack,\r\n  barChart,\r\n  barChartOutline,\r\n} from 'ionicons/icons';\r\nimport { addIcons } from 'ionicons';\r\nimport {\r\n  IonInput,\r\n  IonButton,\r\n  IonHeader,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonContent,\r\n  IonIcon,\r\n  ModalController,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonFooter,\r\n  IonThumbnail,\r\n  IonLoading,\r\n  IonTextarea,\r\n  IonAccordionGroup,\r\n  IonAccordion,\r\n  IonItem,\r\n  IonLabel,\r\n  IonPopover,\r\n} from '@ionic/angular/standalone';\r\nimport {\r\n  PriceDocument,\r\n  ProductDocument,\r\n  QuantityDocument,\r\n} from 'src/app/types/app.types';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport { PhotoComponent } from '../photo/photo.component';\r\nimport { CalculatorComponent } from '../calculator/calculator.component';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ProductStatsComponent } from '../product-stats/product-stats.component';\r\n@Component({\r\n  selector: 'app-product-insert',\r\n  templateUrl: './product-insert.component.html',\r\n  styleUrls: ['./product-insert.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonPopover,\r\n    IonLabel,\r\n    IonItem,\r\n    IonAccordion,\r\n    IonAccordionGroup,\r\n    IonTextarea,\r\n    IonFooter,\r\n    IonCol,\r\n    IonRow,\r\n    IonGrid,\r\n    IonThumbnail,\r\n    IonLoading,\r\n    IonIcon,\r\n    IonContent,\r\n    IonTitle,\r\n    IonToolbar,\r\n    IonHeader,\r\n    IonButton,\r\n    IonInput,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    NgPipesModule,\r\n    PhotoComponent,\r\n    HttpClientModule,\r\n    CalculatorComponent,\r\n  ],\r\n})\r\nexport class ProductInsertComponent implements OnInit {\r\n  @Input() isAdd!: boolean;\r\n  @Input() item!: ProductDocument;\r\n  @Input() itemPrice!: PriceDocument;\r\n  @Input() itemQuantity!: QuantityDocument;\r\n  @ViewChild('buyingPrice', { static: true }) buyingPrice!: IonInput;\r\n  @ViewChild('sellingPrice', { static: true }) sellingPrice!: IonInput;\r\n  productForm!: FormGroup;\r\n  productCategory: string[] = [];\r\n  productConditionningType: string[] = [];\r\n  private productImageEl!: HTMLImageElement;\r\n  private productImageType: string = 'text/plain';\r\n  productImageBase64String: string = '';\r\n  uniteMonetaire: string = '[Ariary]';\r\n  db: any;\r\n  isAddingCategory = false;\r\n\r\n  constructor(\r\n    private databaseService: DatabaseService,\r\n    private formBuilder: FormBuilder,\r\n    private editModalController: ModalController,\r\n    private statsModalController: ModalController,\r\n\r\n    private http: HttpClient\r\n  ) {\r\n    addIcons({ arrowBack, calculator, trashBin, barChartOutline, barChart });\r\n\r\n    this.initializeForms();\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.db = await this.databaseService.get();\r\n    this.productCategory = this.db.products.getAllCategories();\r\n    console.log(this.productCategory);\r\n    this.productConditionningType = this.db.products.getAllConditionningType();\r\n\r\n    // populate all fields with database data (edit)\r\n    if (!this.isAdd && this.item != null) {\r\n      Object.keys(this.productForm.controls).forEach((control) => {\r\n        Object.keys(this.item._data).forEach((itemKey) => {\r\n          if (control == itemKey) {\r\n            this.productForm\r\n              .get(control)\r\n              ?.setValue(this.item[control as keyof typeof this.item]);\r\n          }\r\n        });\r\n      });\r\n      this.db.prices.getProductPrices(this.item).then((P: any) => {\r\n        Object.keys(this.productForm.controls).forEach((control) => {\r\n          Object.keys(P[P.length - 1]._data).forEach((itemKey) => {\r\n            if (control == itemKey && control != 'idPrice') {\r\n              this.productForm\r\n                .get(control)\r\n                ?.setValue(P[P.length - 1][control as keyof typeof P]);\r\n            }\r\n          });\r\n        });\r\n      });\r\n      this.db.quantities.getProductQuantities(this.item).then((Q: any) => {\r\n        Object.keys(this.productForm.controls).forEach((control) => {\r\n          Object.keys(Q[Q.length - 1]._data).forEach((itemKey) => {\r\n            if (control == itemKey && control != 'idQuantity') {\r\n              this.productForm\r\n                .get(control)\r\n                ?.setValue(Q[Q.length - 1][control as keyof typeof Q]);\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n      this.item.getImage(this.item.idProduct)!.then((imageBase64: any) => {\r\n        this.productImageEl = document.getElementById(\r\n          'productImageElt'\r\n        ) as HTMLImageElement;\r\n        this.productImageEl.src = imageBase64;\r\n      });\r\n\r\n      this.productForm\r\n        .get('idPrice')\r\n        ?.setValue(this.db.prices.generatePriceId());\r\n      this.productForm\r\n        .get('idQuantity')\r\n        ?.setValue(this.db.quantities.generateQuantityId());\r\n    }\r\n\r\n    //populate fields with default data (add)\r\n    if (this.isAdd) {\r\n      this.productForm\r\n        .get('idProduct')\r\n        ?.setValue(this.db.products.generateProductId());\r\n      this.productForm\r\n        .get('idPrice')\r\n        ?.setValue(this.db.prices.generatePriceId());\r\n      this.productForm\r\n        .get('idQuantity')\r\n        ?.setValue(this.db.quantities.generateQuantityId());\r\n      this.getBase64DefaultProductImage();\r\n    }\r\n  }\r\n\r\n  async calculateField(ev: any, el: string) {\r\n    if (el == 'buyingPrice') {\r\n      this.productForm.get('buyingPrice')?.setValue(ev);\r\n    }\r\n    if (el == 'sellingPrice') {\r\n      this.productForm.get('sellingPrice')?.setValue(ev);\r\n    }\r\n  }\r\n\r\n  calculateProfitMargin(e: any) {\r\n    if (\r\n      this.productForm.get('sellingPrice')?.value != 0 ||\r\n      this.productForm.get('buyingPrice')?.value != 0\r\n    ) {\r\n      this.productForm\r\n        .get('profitMargin')\r\n        ?.setValue(\r\n          this.productForm.get('sellingPrice')?.value -\r\n            this.productForm.get('buyingPrice')?.value\r\n        );\r\n    } else {\r\n      this.productForm.get('profitMargin')?.setValue(0);\r\n    }\r\n  }\r\n\r\n  calculateSoldQuantity(e: any) {\r\n    if (\r\n      this.productForm.get('supplyQuantity')?.value != 0 ||\r\n      this.productForm.get('stockQuantity')?.value != 0\r\n    ) {\r\n      this.productForm\r\n        .get('soldQuantity')\r\n        ?.setValue(\r\n          this.productForm.get('supplyQuantity')?.value -\r\n            this.productForm.get('stockQuantity')?.value\r\n        );\r\n    } else {\r\n      this.productForm.get('soldQuantity')?.setValue(0);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.editModalController.dismiss(null, 'cancel');\r\n  }\r\n\r\n  async save() {\r\n    if (this.isAdd) {\r\n      if (this.productImageBase64String != '') {\r\n        this.db.products\r\n          .insertProduct(this.productForm.getRawValue())\r\n          .then((p: ProductDocument) => {\r\n            if (p) {\r\n              p.addImage(\r\n                p.idProduct,\r\n                this.productImageBase64String,\r\n                this.productImageType\r\n              ).then(() => {\r\n                this.editModalController.dismiss(null, 'cancel');\r\n              });\r\n              this.db.prices.insertPrice(this.productForm.getRawValue());\r\n              this.db.quantities.insertQuantity(this.productForm.getRawValue());\r\n            } else {\r\n              //error handling\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      this.db.products\r\n        .updateProduct(this.productForm.getRawValue())\r\n        .then((p: ProductDocument) => {\r\n          if (p) {\r\n            p.addImage(\r\n              p.idProduct,\r\n              this.productImageBase64String,\r\n              this.productImageType\r\n            ).then(() => {\r\n              this.editModalController.dismiss(null, 'cancel');\r\n            });\r\n            this.db.prices.insertPrice(this.productForm.getRawValue());\r\n            this.db.quantities.insertQuantity(this.productForm.getRawValue());\r\n          } else {\r\n            //error handling\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  async delete(item: ProductDocument) {\r\n    this.db.products.deleteProduct(item).then(() => {\r\n      this.editModalController.dismiss(null, 'cancel');\r\n    });\r\n  }\r\n\r\n  changePhoto(imageBase64: any) {\r\n    this.productImageEl = document.getElementById(\r\n      'productImageElt'\r\n    ) as HTMLImageElement;\r\n    this.productImageEl.src = imageBase64;\r\n    this.productImageBase64String = imageBase64;\r\n  }\r\n  getBase64DefaultProductImage() {\r\n    this.http\r\n      .get('../../../assets/images/products.png', { responseType: 'blob' })\r\n      .subscribe((res) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          this.productImageBase64String = reader.result as string;\r\n        };\r\n        reader.readAsDataURL(res);\r\n      });\r\n  }\r\n\r\n  fixDatalistPosition() {\r\n    setTimeout(() => {\r\n      const input = document.getElementById('categoryInput');\r\n      if (input) {\r\n        input.setAttribute('autocomplete', 'off'); // D√©sactiver l'auto-compl√©tion du navigateur\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  initializeForms() {\r\n    this.productForm = this.formBuilder.group({\r\n      idProduct: ['', [Validators.required]],\r\n      idPrice: ['', [Validators.required]],\r\n      idQuantity: ['', [Validators.required]],\r\n      name: ['', [Validators.required]],\r\n      description: [''],\r\n      category: ['', [Validators.required]],\r\n      conditionningType: ['', [Validators.required]],\r\n      buyingPrice: ['', [Validators.required]],\r\n      sellingPrice: ['', [Validators.required]],\r\n      profitMargin: [{ value: '', disabled: true }],\r\n      soldQuantity: [{ value: '', disabled: true }],\r\n      supplyQuantity: ['', [Validators.required]],\r\n      stockQuantity: ['', [Validators.required]],\r\n    });\r\n\r\n    this.productForm.patchValue({\r\n      buyingPrice: 0,\r\n      sellingPrice: 0,\r\n      profitMargin: 0,\r\n      stockQuantity: 0,\r\n      supplyQuantity: 0,\r\n      soldQuantity: 0,\r\n    });\r\n  }\r\n\r\n  async showProductStats(product: ProductDocument) {\r\n    const editModal = await this.statsModalController.create({\r\n      component: ProductStatsComponent,\r\n      componentProps: {\r\n        item: product,\r\n        isAdd: false,\r\n      },\r\n    });\r\n    editModal.present();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-accordion {\r\n    margin: 0 auto;\r\n    padding: 0px;\r\n}\r\n\r\nion-accordion.accordion-expanding,\r\nion-accordion.accordion-expanded {\r\n    width: calc(100% - 32px);\r\n    margin: 16px auto;\r\n}\r\n\r\nion-accordion.accordion-collapsing ion-item[slot='header'],\r\nion-accordion.accordion-collapsed ion-item[slot='header'] {\r\n    --background: var(--ion-color-light);\r\n    --color: var(--ion-color-light-contrast);\r\n}\r\n\r\nion-accordion.accordion-expanding ion-item[slot='header'],\r\nion-accordion.accordion-expanded ion-item[slot='header'] {\r\n    --background: var(--ion-color-primary);\r\n    --color: var(--ion-color-primary-contrast);\r\n}\r\n\r\nion-item{\r\n    width: 100%;\r\n}\r\n\r\ninput{\r\n    outline: none !important;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    border-color: rgba(128, 128, 128, 0.242);\r\n    width: 100%;\r\n    height : 56px;\r\n    padding: 2px;\r\n}\r\n\r\ninput:focus {\r\n    outline: none !important;\r\n    border: 2px solid #29c467;\r\n}\r\n\r\n",
                    "styleUrl": "./product-insert.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "editModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "statsModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 100,
                "jsdoctags": [
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "editModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "statsModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header class=\"ion-no-border\" [translucent]=\"true\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-button\r\n      slot=\"start\"\r\n      type=\"button\"\r\n      color=\"dark\"\r\n      fill=\"clear\"\r\n      (click)=\"close()\"\r\n    >\r\n      <ion-icon size=\"large\" name=\"arrow-back\" slot=\"icon-only\"></ion-icon>\r\n    </ion-button>\r\n    <ng-container *ngIf=\"isAdd; else edit0\">\r\n      <ion-title class=\"ion-text-center\">\r\n        {{ \"GLOBAL.ADD\" | translate }}\r\n      </ion-title>\r\n    </ng-container>\r\n    <ng-template #edit0>\r\n      <ion-title class=\"ion-text-center\">\r\n        {{ \"GLOBAL.EDIT\" | translate }}\r\n      </ion-title>\r\n    </ng-template>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <form [formGroup]=\"productForm\" (ngSubmit)=\"save()\">\r\n    <div *ngIf=\"false\">\r\n      <ion-input type=\"text\" formControlName=\"idProduct\"></ion-input>\r\n      <ion-input type=\"text\" formControlName=\"idPrice\"></ion-input>\r\n      <ion-input type=\"text\" formControlName=\"idQuantity\"></ion-input>\r\n    </div>\r\n    <ion-accordion-group value=\"first\">\r\n      <ion-accordion value=\"first\">\r\n        <ion-item slot=\"header\">\r\n          <ng-container *ngIf=\"isAdd; else edit1\">\r\n            <ion-thumbnail>\r\n              <img\r\n                id=\"productImageElt\"\r\n                src=\"../../../assets/images/products.png\"\r\n              />\r\n            </ion-thumbnail>\r\n            <ion-title class=\"ion-text-center\">\r\n              {{ \"PRODUCT.PRODUCTS\" | translate }}\r\n            </ion-title>\r\n          </ng-container>\r\n          <ng-template #edit1>\r\n            <ion-thumbnail>\r\n              <img id=\"productImageElt\" />\r\n            </ion-thumbnail>\r\n            <ion-title class=\"ion-text-center\">{{ item.name }}</ion-title>\r\n          </ng-template>\r\n        </ion-item>\r\n        <div slot=\"content\">\r\n          <ion-grid>\r\n            <!-- photo -->\r\n            <ion-row>\r\n              <ion-item>\r\n                <ion-col class=\"ion-text-center\">\r\n                  <app-photo (newPhoto)=\"changePhoto($event)\"></app-photo>\r\n                </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n            <!-- category -->\r\n            <ion-row>\r\n              <ion-item lines=\"none\" class=\"ion-no-padding\">\r\n                <ion-col>\r\n                  <ion-label\r\n                    >{{ \"PRODUCT.CATEGORY\" | translate }} * :\r\n                  </ion-label>\r\n                </ion-col>\r\n                <ion-col>\r\n                  <input\r\n                    id=\"category\"\r\n                    list=\"categoryList\"\r\n                    fill=\"outline\"\r\n                    formControlName=\"category\"\r\n                    (focus)=\"fixDatalistPosition()\"\r\n                  />\r\n                  <datalist id=\"categoryList\">\r\n                    <option\r\n                      *ngFor=\"let category of productCategory\"\r\n                      [value]=\"category\"\r\n                    >\r\n                      {{ category }}\r\n                    </option>\r\n                  </datalist>\r\n                </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n            <!-- name -->\r\n            <ion-row>\r\n              <ion-item class=\"ion-no-padding\">\r\n                <ion-col>\r\n                  <ion-label> {{ \"PRODUCT.NAME\" | translate }} * :</ion-label>\r\n                </ion-col>\r\n                <ion-col>\r\n                  <ion-input\r\n                    type=\"text\"\r\n                    fill=\"outline\"\r\n                    formControlName=\"name\"\r\n                    labelPlacement=\"stacked\"\r\n                  >\r\n                  </ion-input>\r\n                </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n            <!-- conditionningType -->\r\n            <ion-row>\r\n              <ion-item lines=\"none\" class=\"ion-no-padding\">\r\n                <ion-col>\r\n                  <ion-label>\r\n                    {{ \"PRODUCT.CONDITIONNINGTYPE\" | translate }} * :\r\n                  </ion-label>\r\n                </ion-col>\r\n                <ion-col>\r\n                  <input\r\n                    id=\"conditionningType\"\r\n                    list=\"conditionningList\"\r\n                    fill=\"outline\"\r\n                    formControlName=\"conditionningType\"\r\n                  />\r\n                  <datalist id=\"conditionningList\">\r\n                    <select id=\"select2\">\r\n                      <option\r\n                        *ngFor=\"\r\n                          let conditionningType of productConditionningType\r\n                        \"\r\n                        [value]=\"conditionningType\"\r\n                      >\r\n                        {{ conditionningType }}\r\n                      </option>\r\n                    </select>\r\n                  </datalist>\r\n                </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n            <!-- description -->\r\n            <ion-row>\r\n              <ion-item class=\"ion-no-padding\">\r\n                <ion-col>\r\n                  <ion-textarea\r\n                    [autoGrow]=\"true\"\r\n                    fill=\"outline\"\r\n                    formControlName=\"description\"\r\n                    label=\"{{ 'PRODUCT.DESCRIPTION' | translate }}\"\r\n                    labelPlacement=\"stacked\"\r\n                  >\r\n                  </ion-textarea>\r\n                </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </div>\r\n      </ion-accordion>\r\n      <ion-accordion value=\"second\">\r\n        <ion-item slot=\"header\">\r\n          <ion-thumbnail>\r\n            <img src=\"../../../assets/images/money.png\" />\r\n          </ion-thumbnail>\r\n          <ion-title class=\"ion-text-center\">\r\n            {{ \"PRODUCT.PRICE\" | translate }} {{ uniteMonetaire }}\r\n          </ion-title>\r\n        </ion-item>\r\n        <div slot=\"content\">\r\n          <ion-grid>\r\n            <!-- buying price -->\r\n            <ion-row>\r\n              <ion-item class=\"ion-no-padding\">\r\n                <ion-col size=\"7\">\r\n                  <ion-input\r\n                    #buyingPrice\r\n                    type=\"number\"\r\n                    fill=\"outline\"\r\n                    label=\"{{ 'PRODUCT.BUYINGPRICE' | translate }} * \"\r\n                    labelPlacement=\"stacked\"\r\n                    formControlName=\"buyingPrice\"\r\n                    (ionInput)=\"calculateProfitMargin($event)\"\r\n                  >\r\n                    <ion-button\r\n                      id=\"buyingPrice\"\r\n                      fill=\"clear\"\r\n                      slot=\"end\"\r\n                      (click)=\"calculateField($event, 'buyingPrice')\"\r\n                    >\r\n                      <ion-icon\r\n                        slot=\"icon-only\"\r\n                        name=\"calculator\"\r\n                        aria-hidden=\"true\"\r\n                      ></ion-icon>\r\n                    </ion-button>\r\n                    <ion-popover trigger=\"buyingPrice\" triggerAction=\"click\">\r\n                      <ng-template>\r\n                        <ion-content>\r\n                          <app-calculator\r\n                            (calculatorResult)=\"\r\n                              calculateField($event, 'buyingPrice')\r\n                            \"\r\n                          >\r\n                          </app-calculator>\r\n                        </ion-content>\r\n                      </ng-template>\r\n                    </ion-popover>\r\n                  </ion-input>\r\n                </ion-col>\r\n                <ion-col size=\"5\"> </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n            <!-- sellingPrice -->\r\n            <ion-row>\r\n              <ion-item class=\"ion-no-padding\">\r\n                <ion-col size=\"7\">\r\n                  <ion-input\r\n                    #sellingPrice\r\n                    type=\"number\"\r\n                    fill=\"outline\"\r\n                    label=\"{{ 'PRODUCT.SELLINGPRICE' | translate }} * \"\r\n                    labelPlacement=\"stacked\"\r\n                    formControlName=\"sellingPrice\"\r\n                    (ionInput)=\"calculateProfitMargin($event)\"\r\n                  >\r\n                    <ion-button id=\"sellingPrice\" fill=\"clear\" slot=\"end\">\r\n                      <ion-icon\r\n                        slot=\"icon-only\"\r\n                        name=\"calculator\"\r\n                        aria-hidden=\"true\"\r\n                      ></ion-icon>\r\n                    </ion-button>\r\n                    <ion-popover trigger=\"sellingPrice\" triggerAction=\"click\">\r\n                      <ng-template>\r\n                        <ion-content class=\"ion-padding\">\r\n                          <app-calculator\r\n                            (calculatorResult)=\"\r\n                              calculateField($event, 'sellingPrice')\r\n                            \"\r\n                          ></app-calculator>\r\n                        </ion-content>\r\n                      </ng-template>\r\n                    </ion-popover>\r\n                  </ion-input>\r\n                </ion-col>\r\n                <ion-col size=\"5\"> </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n            <!-- profitMargin -->\r\n            <ion-row>\r\n              <ion-item class=\"ion-no-padding\">\r\n                <ion-col size=\"5\"> </ion-col>\r\n                <ion-col size=\"7\">\r\n                  <ion-input\r\n                    type=\"number\"\r\n                    fill=\"outline\"\r\n                    formControlName=\"profitMargin\"\r\n                    label=\"{{ 'PRODUCT.PROFITMARGIN' | translate }}\"\r\n                    labelPlacement=\"stacked\"\r\n                  >\r\n                  </ion-input>\r\n                </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </div>\r\n      </ion-accordion>\r\n      <ion-accordion value=\"third\">\r\n        <ion-item slot=\"header\">\r\n          <ion-thumbnail>\r\n            <img src=\"../../../assets/images/stock.png\" />\r\n          </ion-thumbnail>\r\n          <ng-container *ngIf=\"isAdd; else edit2\">\r\n            <ion-title class=\"ion-text-center\">\r\n              {{ \"PRODUCT.QUANTITY\" | translate }}\r\n            </ion-title>\r\n          </ng-container>\r\n          <ng-template #edit2>\r\n            <ion-title class=\"ion-text-center\">\r\n              {{ \"PRODUCT.QUANTITY\" | translate }}\r\n              {{ \"[\" + item.conditionningType + \"]\" }}\r\n            </ion-title>\r\n          </ng-template>\r\n        </ion-item>\r\n        <div slot=\"content\">\r\n          <ion-grid>\r\n            <!-- supplyQuantity -->\r\n            <ion-row>\r\n              <ion-item class=\"ion-no-padding\">\r\n                <ion-col size=\"7\">\r\n                  <ion-input\r\n                    type=\"number\"\r\n                    fill=\"outline\"\r\n                    label=\"{{ 'PRODUCT.SUPPLYQUANTITY' | translate }} * \"\r\n                    labelPlacement=\"stacked\"\r\n                    formControlName=\"supplyQuantity\"\r\n                    (ionInput)=\"calculateSoldQuantity($event)\"\r\n                  >\r\n                  </ion-input>\r\n                </ion-col>\r\n                <ion-col size=\"5\"> </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n            <!-- stockQuantity -->\r\n            <ion-row>\r\n              <ion-item class=\"ion-no-padding\">\r\n                <ion-col size=\"7\">\r\n                  <ion-input\r\n                    type=\"number\"\r\n                    fill=\"outline\"\r\n                    label=\"{{ 'PRODUCT.STOCKQUANTITY' | translate }} * \"\r\n                    labelPlacement=\"stacked\"\r\n                    formControlName=\"stockQuantity\"\r\n                    (ionInput)=\"calculateSoldQuantity($event)\"\r\n                  >\r\n                  </ion-input>\r\n                </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n            <!-- soldQuantity -->\r\n            <ion-row>\r\n              <ion-item class=\"ion-no-padding\">\r\n                <ion-col size=\"5\"> </ion-col>\r\n                <ion-col size=\"7\">\r\n                  <ion-input\r\n                    type=\"number\"\r\n                    fill=\"outline\"\r\n                    label=\"{{ 'PRODUCT.SOLDQUANTITY' | translate }}\"\r\n                    labelPlacement=\"stacked\"\r\n                    formControlName=\"soldQuantity\"\r\n                    (ionFocus)=\"calculateSoldQuantity($event)\"\r\n                  >\r\n                  </ion-input>\r\n                </ion-col>\r\n                <ion-col size=\"5\"> </ion-col>\r\n              </ion-item>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </div>\r\n      </ion-accordion>\r\n    </ion-accordion-group>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col class=\"ion-text-center\">\r\n          <ion-button\r\n            id=\"open-loading\"\r\n            type=\"submit\"\r\n            [disabled]=\"!productForm.valid\"\r\n            color=\"primary\"\r\n          >\r\n            {{ \"GLOBAL.SAVE\" | translate }}\r\n          </ion-button>\r\n          <ion-loading\r\n            trigger=\"open-loading\"\r\n            message=\"Loading...\"\r\n            [duration]=\"3000\"\r\n            spinner=\"circles\"\r\n          ></ion-loading>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </form>\r\n</ion-content>\r\n<ion-footer>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-button\r\n      size=\"large\"\r\n      slot=\"end\"\r\n      type=\"button\"\r\n      fill=\"clear\"\r\n      color=\"dark\"\r\n      (click)=\"delete(item)\"\r\n      *ngIf=\"!isAdd\"\r\n    >\r\n      <ion-icon name=\"trash-bin\"> </ion-icon>\r\n    </ion-button>\r\n    <ion-button\r\n      size=\"large\"\r\n      slot=\"start\"\r\n      type=\"button\"\r\n      fill=\"clear\"\r\n      color=\"dark\"\r\n      (click)=\"showProductStats(item)\"\r\n      *ngIf=\"!isAdd\"\r\n    >\r\n      <ion-icon name=\"bar-chart-outline\"></ion-icon>\r\n    </ion-button>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n"
        },
        {
            "name": "ProductsListComponent",
            "id": "component-ProductsListComponent-624dcce39c04963121f9f532025960098ac0e38cd4e640cb47219be839a3b131268cd41cd7ba69dc1c6fa034b8888854f47855d089244aba44a32baca7a7be97",
            "file": "src/app/components/products-list/products-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-products-list",
            "styleUrls": [
                "./products-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./products-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "isTrashBinVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductDocument[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "productToDelete",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "searchTerm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "totalProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [
                {
                    "name": "bulkDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "selectProductToDelete",
                    "args": [
                        {
                            "name": "item",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showEditProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "NgPipesModule",
                    "type": "pipe"
                },
                {
                    "name": "IonSearchbar"
                },
                {
                    "name": "IonSkeletonText"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonFab"
                },
                {
                    "name": "IonFabButton"
                },
                {
                    "name": "IonFabList"
                },
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonLabel"
                },
                {
                    "name": "IonCardContent"
                },
                {
                    "name": "IonCardSubtitle"
                },
                {
                    "name": "IonCardTitle"
                },
                {
                    "name": "IonCardHeader"
                },
                {
                    "name": "IonCard"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonGrid"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonSpinner"
                },
                {
                    "name": "ProductCardComponent",
                    "type": "component"
                },
                {
                    "name": "ProductInsertComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DatabaseService } from '../../services/database.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgPipesModule } from 'ngx-pipes';\r\nimport {\r\n  IonIcon,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonSpinner,\r\n  IonCard,\r\n  IonCardHeader,\r\n  IonCardTitle,\r\n  IonCardSubtitle,\r\n  IonCardContent,\r\n  IonLabel,\r\n  IonItem,\r\n  IonFabList,\r\n  IonFabButton,\r\n  IonFab,\r\n  IonContent,\r\n  ModalController,\r\n  IonButton,\r\n  IonSearchbar,\r\n  IonSkeletonText,\r\n} from '@ionic/angular/standalone';\r\nimport { ProductDocument } from 'src/app/types/app.types';\r\nimport { ProductCardComponent } from '../product-card/product-card.component';\r\nimport { ProductInsertComponent } from '../product-insert/product-insert.component';\r\nimport { addIcons } from 'ionicons';\r\nimport { trashBin } from 'ionicons/icons';\r\n\r\n@Component({\r\n  selector: 'app-products-list',\r\n  templateUrl: './products-list.component.html',\r\n  styleUrls: ['./products-list.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgPipesModule,\r\n    IonSearchbar,\r\n    IonSkeletonText,\r\n    IonButton,\r\n    IonContent,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonFabList,\r\n    IonItem,\r\n    IonLabel,\r\n    IonCardContent,\r\n    IonCardSubtitle,\r\n    IonCardTitle,\r\n    IonCardHeader,\r\n    IonCard,\r\n    IonCol,\r\n    IonRow,\r\n    IonGrid,\r\n    IonIcon,\r\n    IonSpinner,\r\n    ProductCardComponent,\r\n    ProductInsertComponent,\r\n  ],\r\n})\r\nexport class ProductsListComponent implements OnInit {\r\n  products!: ProductDocument[];\r\n  totalProducts!: number;\r\n  searchTerm!: string;\r\n  productToDelete: string[] = [];\r\n  isTrashBinVisible: boolean = false;\r\n  db: any;\r\n\r\n  constructor(\r\n    private databaseService: DatabaseService,\r\n    private editModalController: ModalController\r\n  ) {\r\n    addIcons({ trashBin });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.db = await this.databaseService.get();\r\n    this.db.products.listAllProducts().subscribe((p: ProductDocument[]) => {\r\n      this.products = p;\r\n    });\r\n  }\r\n\r\n  async showEditProduct(product: ProductDocument) {\r\n    const editModal = await this.editModalController.create({\r\n      component: ProductInsertComponent,\r\n      componentProps: {\r\n        item: product,\r\n        isAdd: false,\r\n      },\r\n    });\r\n    editModal.present();\r\n  }\r\n\r\n  selectProductToDelete(item: ProductDocument) {\r\n    if (!this.productToDelete.includes(item.idProduct)) {\r\n      this.productToDelete.push(item.idProduct);\r\n    } else {\r\n      this.productToDelete = this.productToDelete.filter(\r\n        (productId) => productId != item.idProduct\r\n      );\r\n    }\r\n\r\n    if (this.productToDelete.length != 0) {\r\n      this.isTrashBinVisible = true;\r\n    } else {\r\n      this.isTrashBinVisible = false;\r\n    }\r\n  }\r\n\r\n  async bulkDelete() {\r\n    this.db.products\r\n      .bulkDeleteProduct(this.productToDelete)\r\n      .then((val: { error: string | any[] }) => {\r\n        if (val.error.length == 0) {\r\n          this.productToDelete = [];\r\n          this.isTrashBinVisible = false;\r\n        } else {\r\n          // error handling\r\n        }\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".floating-div {\r\n    z-index: 1000;\r\n    position: fixed;\r\n    border-radius: 33px;\r\n    padding: 20px;\r\n    text-decoration: none;\r\n}\r\n\r\n.floating-div.center{\r\n    top: 75%;\r\n    right: 50%;\r\n}\r\n\r\nion-fab-button {\r\n    --background: var(--ion-color-danger);\r\n    --background-activated: var(--ion-color-danger-tint)\r\n    --background-hover: var(--ion-color-danger-shade);\r\n    --box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.3), 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\r\n    --color: black;\r\n}",
                    "styleUrl": "./products-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "editModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 72,
                "jsdoctags": [
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "editModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-searchbar placeholder=\"\" [(ngModel)]=\"searchTerm\" animated=\"true\">\r\n</ion-searchbar>\r\n<ion-grid *ngIf=\"!products\">\r\n  <ion-row>\r\n    <ion-col\r\n      size=\"12\"\r\n      size-xs=\"4\"\r\n      size-sm=\"3\"\r\n      size-md=\"2\"\r\n      size-lg=\"2\"\r\n      *ngFor=\"let i of [1, 2, 3, 4, 5, 6, 7, 8, 9]\"\r\n    >\r\n      <ion-card>\r\n        <ion-card-header>\r\n          <ion-card-title\r\n            ><ion-skeleton-text [animated]=\"true\"></ion-skeleton-text\r\n          ></ion-card-title>\r\n          <ion-card-subtitle\r\n            ><ion-skeleton-text [animated]=\"true\"></ion-skeleton-text\r\n          ></ion-card-subtitle>\r\n        </ion-card-header>\r\n        <ion-card-content>\r\n          <ion-skeleton-text\r\n            [animated]=\"true\"\r\n            style=\"height: 25px\"\r\n          ></ion-skeleton-text>\r\n        </ion-card-content>\r\n      </ion-card>\r\n    </ion-col>\r\n  </ion-row>\r\n</ion-grid>\r\n<ion-grid>\r\n  <ion-row>\r\n    <ion-col\r\n      size=\"12\"\r\n      size-xs=\"6\"\r\n      size-sm=\"6\"\r\n      size-md=\"2\"\r\n      size-lg=\"2\"\r\n      *ngFor=\"let product of products | filterBy : ['name'] : this.searchTerm\"\r\n    >\r\n      <app-product-card\r\n        [item]=\"product\"\r\n        [cardId]=\"product.idProduct\"\r\n        (shortPress)=\"showEditProduct(product)\"\r\n        (longPress)=\"selectProductToDelete(product)\"\r\n      ></app-product-card>\r\n    </ion-col>\r\n  </ion-row>\r\n</ion-grid>\r\n\r\n<div class=\"floating-div center\" *ngIf=\"isTrashBinVisible\">\r\n  <ion-fab>\r\n    <ion-fab-button (click)=\"bulkDelete()\">\r\n      <ion-icon name=\"trash-bin\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n</div>\r\n"
        },
        {
            "name": "ProductStatsComponent",
            "id": "component-ProductStatsComponent-59201d4396d8c74301cc461dfd307b2603a6640d4af87d9b42dace0562caf51b067ed684cb9730386b7619bd1029cf28437c9b2c2a7388b8d2c664c575097e7d",
            "file": "src/app/components/product-stats/product-stats.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-stats",
            "styleUrls": [
                "./product-stats.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-stats.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "ProductDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "productChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "productStockValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "profitMarginPercent",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "'soldQuantity'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "stockQuantity",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateStockValue",
                    "args": [
                        {
                            "name": "p",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<number>",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "p",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calulateProfitMarginPercent",
                    "args": [
                        {
                            "name": "p",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<number>",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "p",
                            "type": "ProductDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createChart",
                    "args": [
                        {
                            "name": "X",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "Y",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "X",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "Y",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "displayChartChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDateFromTimestamp",
                    "args": [
                        {
                            "name": "timestamp",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 189,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "timestamp",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "range",
                    "args": [
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1"
                        }
                    ],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "1",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonGrid"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "IonCard"
                },
                {
                    "name": "IonCardContent"
                },
                {
                    "name": "IonCardHeader"
                },
                {
                    "name": "IonCardTitle"
                },
                {
                    "name": "IonSelect"
                },
                {
                    "name": "IonSelectOption"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule, formatDate } from '@angular/common';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\nimport { addIcons } from 'ionicons';\r\nimport { arrowBack } from 'ionicons/icons';\r\nimport {\r\n  ModalController,\r\n  IonIcon,\r\n  IonButton,\r\n  IonToolbar,\r\n  IonHeader,\r\n  IonTitle,\r\n  IonContent,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonCard,\r\n  IonCardHeader,\r\n  IonCardContent,\r\n  IonCardTitle,\r\n  IonSelect,\r\n  IonSelectOption,\r\n} from '@ionic/angular/standalone';\r\nimport { ProductDocument } from 'src/app/types/app.types';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\n\r\n@Component({\r\n  selector: 'app-product-stats',\r\n  templateUrl: './product-stats.component.html',\r\n  styleUrls: ['./product-stats.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    IonIcon,\r\n    IonButton,\r\n    IonToolbar,\r\n    IonHeader,\r\n    IonTitle,\r\n    IonContent,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonCard,\r\n    IonCardContent,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonSelect,\r\n    IonSelectOption,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class ProductStatsComponent implements OnInit {\r\n  @Input() item!: ProductDocument;\r\n  profitMarginPercent: number = 0;\r\n  productStockValue: number = 0;\r\n  productChart: any;\r\n  stockQuantity: number = 0;\r\n  db: any;\r\n  selectedValue = 'soldQuantity';\r\n\r\n  constructor(\r\n    private statsModalController: ModalController,\r\n    private databaseService: DatabaseService\r\n  ) {\r\n    Chart.register(...registerables);\r\n    addIcons({ arrowBack });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.db = await this.databaseService.get();\r\n\r\n    this.productStockValue = await this.calculateStockValue(this.item);\r\n    this.profitMarginPercent = await this.calulateProfitMarginPercent(\r\n      this.item\r\n    );\r\n\r\n    //la derni√®re quantit√© en stock\r\n    this.stockQuantity = (\r\n      await this.db.quantities.getProductQuantities(this.item)\r\n    )[(await this.db.quantities.getProductQuantities(this.item)).length - 1][\r\n      'stockQuantity'\r\n    ];\r\n  }\r\n\r\n  close() {\r\n    this.statsModalController.dismiss(null, 'cancel');\r\n  }\r\n\r\n  displayChartChange(event: CustomEvent) {\r\n    if (event.detail.value === 'price') {\r\n      this.db.prices.getProductPrices(this.item).then(async (p: any) => {\r\n        const x = await p.map((P: { [x: string]: any }) =>\r\n          this.formatDateFromTimestamp(P['priceRegisteredDate'])\r\n        );\r\n        const y = await p.map((P: { [x: string]: any }) => P['sellingPrice']);\r\n        this.createChart(x, y);\r\n      });\r\n    }\r\n    if (event.detail.value === 'soldQuantity') {\r\n      this.db.quantities\r\n        .getProductQuantities(this.item)\r\n        .then(async (p: any) => {\r\n          const x = await p.map((P: { [x: string]: any }) =>\r\n            this.formatDateFromTimestamp(P['quantityRegisteredDate'])\r\n          );\r\n          const y = await p.map((P: { [x: string]: any }) => P['soldQuantity']);\r\n\r\n          this.createChart(x, y);\r\n        });\r\n    }\r\n  }\r\n  // Cr√©ation du graphique d'√©volution\r\n  createChart(X: any, Y: any) {\r\n    const ctx = document.getElementById('productChart') as HTMLCanvasElement;\r\n    if (this.productChart) {\r\n      this.productChart.destroy();\r\n    }\r\n    this.productChart = new Chart(ctx, {\r\n      type: 'line', // Type de graphique (ici une courbe)\r\n      data: {\r\n        labels: X,\r\n        datasets: [\r\n          {\r\n            data: Y,\r\n            borderColor: 'blue',\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            type: 'time', // Type d'axe temporel\r\n            time: {\r\n              unit: 'day', // Choisir l'unit√© de temps (par exemple, jour, mois, ann√©e)\r\n              displayFormats: {\r\n                day: 'MMM d', // Format affich√© sur l'axe des abscisses\r\n              },\r\n            },\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async calculateStockValue(p: ProductDocument): Promise<number> {\r\n    const result =\r\n      (await this.db.prices.getProductPrices(p))[\r\n        (await this.db.prices.getProductPrices(p)).length - 1\r\n      ]['buyingPrice'] *\r\n      (await this.db.quantities.getProductQuantities(p))[\r\n        (await this.db.quantities.getProductQuantities(p)).length - 1\r\n      ]['stockQuantity'];\r\n\r\n    return result;\r\n  }\r\n\r\n  async calulateProfitMarginPercent(p: ProductDocument): Promise<number> {\r\n    const result =\r\n      (((await this.db.prices.getProductPrices(p))[\r\n        (await this.db.prices.getProductPrices(p)).length - 1\r\n      ]['sellingPrice'] -\r\n        (await this.db.prices.getProductPrices(p))[\r\n          (await this.db.prices.getProductPrices(p)).length - 1\r\n        ]['buyingPrice']) /\r\n        (await this.db.prices.getProductPrices(p))[\r\n          (await this.db.prices.getProductPrices(p)).length - 1\r\n        ]['sellingPrice']) *\r\n      100;\r\n\r\n    return Math.round(result);\r\n  }\r\n\r\n  range(start: number, end: number, step: number = 1): number[] {\r\n    const result = [];\r\n    for (let i = start; i < end; i += step) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  formatDateFromTimestamp(timestamp: number): string {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "canvas {\r\n  width: 100% !important;\r\n  height: 300px !important;\r\n}\r\n\r\nion-content {\r\n  --padding-top: 56px; /* Ajustez selon la hauteur de votre header */\r\n}\r\n\r\n/* Style g√©n√©ral des cartes */\r\nion-card {\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 16px;\r\n  margin: 16px 0;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  align-content: center;\r\n}\r\n\r\nion-card-header {\r\n  padding-top: 0%;\r\n  margin-top: 0%;\r\n}\r\nion-card-title {\r\n  align-content: center;\r\n  white-space: nowrap;\r\n  color: #2e2d2d; /* Couleur grise pour rendre le titre moins visible */\r\n}\r\n\r\nion-card-content h1 {\r\n  white-space: nowrap; /* Pas de retour √† la ligne */\r\n  overflow: hidden; /* Cache le texte qui d√©passe */\r\n  text-overflow: ellipsis; /* Ajoute \"...\" si le texte est trop long */\r\n  max-width: 100%; /* Le texte reste dans la largeur du conteneur */\r\n  font-size: calc(30px + 1vw); /* Ajustement dynamique de la taille du texte */\r\n  color: #3b5998;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Effet de survol (hover) */\r\nion-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n",
                    "styleUrl": "./product-stats.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "statsModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 63,
                "jsdoctags": [
                    {
                        "name": "statsModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header class=\"ion-no-border\" [translucent]=\"true\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-button\r\n      slot=\"start\"\r\n      type=\"button\"\r\n      color=\"dark\"\r\n      fill=\"clear\"\r\n      (click)=\"close()\"\r\n    >\r\n      <ion-icon size=\"large\" name=\"arrow-back\" slot=\"icon-only\"></ion-icon>\r\n    </ion-button>\r\n    <ion-title class=\"ion-text-center\">\r\n      {{ item.name }}\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-grid class=\"ion-no-margin\">\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-card>\r\n          <ion-card-header>\r\n            <ion-card-title class=\"ion-text-wrap\">\r\n              {{ \"PRODUCT.STOCKQUANTITY\" | translate }}\r\n            </ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content class=\"ion-text-center\">\r\n            <h1>{{ stockQuantity }}</h1>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-card>\r\n          <ion-card-header>\r\n            <ion-card-title>\r\n              {{ \"PRODUCT.SOLDQUANTITY\" | translate }}\r\n            </ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content class=\"ion-text-center\">\r\n            <h1></h1>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-card>\r\n          <ion-card-header>\r\n            <ion-card-title>\r\n              {{ \"PRODUCT.EVOLUTION\" | translate }}\r\n            </ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content>\r\n            <ion-select\r\n              interface=\"popover\"\r\n              label-placement=\"floating\"\r\n              fill=\"outline\"\r\n              [(ngModel)]=\"selectedValue\"\r\n              (ionChange)=\"displayChartChange($event)\"\r\n            >\r\n              <ion-select-option value=\"price\">\r\n                {{ \"PRODUCT.PRICE\" | translate }}\r\n              </ion-select-option>\r\n              <ion-select-option value=\"soldQuantity\">\r\n                {{ \"PRODUCT.QUANTITY\" | translate }}\r\n                {{ \"PRODUCT.SOLDQUANTITY\" | translate }}\r\n              </ion-select-option>\r\n            </ion-select>\r\n            <ion-card>\r\n              <canvas id=\"productChart\"></canvas>\r\n            </ion-card>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n"
        },
        {
            "name": "Tab1Page",
            "id": "component-Tab1Page-54655701607ee19418685886eaae448fbcb50713741a39274861e13e87c198deb2f55b562239259af643fae6069307e7ee64d86044e6664619b84a4c6844f72e",
            "file": "src/app/pages/products/tab1/tab1.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab1",
            "styleUrls": [
                "tab1.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tab1.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "showAddProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonFab"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonFabButton"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "ProductsListComponent",
                    "type": "component"
                },
                {
                    "name": "ProductInsertComponent",
                    "type": "component"
                },
                {
                    "name": "HearderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { ProductsListComponent } from 'src/app/components/products-list/products-list.component';\r\nimport { add } from 'ionicons/icons';\r\nimport {\r\n  IonHeader,\r\n  IonContent,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonFabButton,\r\n  IonIcon,\r\n  IonFab,\r\n  ModalController,\r\n} from '@ionic/angular/standalone';\r\nimport { ProductInsertComponent } from '../../../components/product-insert/product-insert.component';\r\nimport { addIcons } from 'ionicons';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { HearderComponent } from '../../../components/hearder/hearder.component';\r\n\r\n@Component({\r\n  selector: 'app-tab1',\r\n  templateUrl: 'tab1.page.html',\r\n  styleUrls: ['tab1.page.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonFab,\r\n    IonIcon,\r\n    IonFabButton,\r\n    IonTitle,\r\n    IonToolbar,\r\n    IonContent,\r\n    IonHeader,\r\n    CommonModule,\r\n    TranslateModule,\r\n    ProductsListComponent,\r\n    ProductInsertComponent,\r\n    HearderComponent,\r\n  ],\r\n})\r\nexport class Tab1Page {\r\n  constructor(private addModalController: ModalController) {\r\n    addIcons({ add });\r\n  }\r\n\r\n  async showAddProduct() {\r\n    const addModal = await this.addModalController.create({\r\n      component: ProductInsertComponent,\r\n      componentProps: {\r\n        isAdd: true,\r\n      },\r\n    });\r\n    addModal.present();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-content {\r\n  --padding-top: 56px; /* Ajustez selon la hauteur de votre header */\r\n}\r\n",
                    "styleUrl": "tab1.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "addModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "addModalController",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ion-content [fullscreen]=\"true\">\r\n  <app-products-list></app-products-list>\r\n  <ion-fab slot=\"fixed\" vertical=\"bottom\" horizontal=\"end\">\r\n    <ion-fab-button (click)=\"showAddProduct()\" size=\"small\">\r\n      <ion-icon name=\"add\"></ion-icon>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n</ion-content>\r\n"
        },
        {
            "name": "Tab2Page",
            "id": "component-Tab2Page-5825764591dd54f9424836b2a60fc9a21fe439e536a2284fc9303a0348bc376fb1693c2b60b6be33dcaa9613044a94c8d43516ba2271f31c6faa72b6c78f870f",
            "file": "src/app/pages/products/tab2/tab2.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab2",
            "styleUrls": [
                "tab2.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tab2.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "meanProfitMargin",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "priceChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "productsNumber",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "stockChart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "stockValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateMeanProfitMargin",
                    "args": [
                        {
                            "name": "p",
                            "type": "ProductDocument[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<number>",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "p",
                            "type": "ProductDocument[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculateStockValue",
                    "args": [
                        {
                            "name": "p",
                            "type": "ProductDocument[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<number>",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "p",
                            "type": "ProductDocument[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createPriceChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createStockChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "IonCardSubtitle"
                },
                {
                    "name": "IonCardTitle"
                },
                {
                    "name": "IonCardHeader"
                },
                {
                    "name": "IonCard"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonGrid"
                },
                {
                    "name": "IonCardContent"
                },
                {
                    "name": "HearderComponent",
                    "type": "component"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  IonCard,\r\n  IonCardContent,\r\n  IonCardHeader,\r\n  IonCardTitle,\r\n  IonCardSubtitle,\r\n  IonToolbar,\r\n  IonCol,\r\n  IonRow,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonTitle,\r\n  IonContent,\r\n} from '@ionic/angular/standalone';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { HearderComponent } from '../../../components/hearder/hearder.component';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\nimport { ProductDocument } from 'src/app/types/app.types';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-tab2',\r\n  templateUrl: 'tab2.page.html',\r\n  styleUrls: ['tab2.page.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonHeader,\r\n    IonToolbar,\r\n    IonTitle,\r\n    IonContent,\r\n    IonCardSubtitle,\r\n    IonCardTitle,\r\n    IonCardHeader,\r\n    IonCard,\r\n    IonCol,\r\n    IonRow,\r\n    IonGrid,\r\n    IonCardContent,\r\n    HearderComponent,\r\n    TranslateModule,\r\n    CommonModule,\r\n  ],\r\n})\r\nexport class Tab2Page implements OnInit {\r\n  productsNumber: number = 0;\r\n  stockValue: number = 0;\r\n  meanProfitMargin: number = 0;\r\n  priceChart: any;\r\n  stockChart: any;\r\n  db: any;\r\n\r\n  constructor(private databaseService: DatabaseService) {\r\n    // Enregistrement des composants n√©cessaires de Chart.js\r\n    Chart.register(...registerables);\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.db = await this.databaseService.get();\r\n    this.db.products\r\n      .listAllProducts()\r\n      .subscribe(async (p: ProductDocument[]) => {\r\n        this.productsNumber = p.length;\r\n        this.stockValue = await this.calculateStockValue(p);\r\n        this.meanProfitMargin = await this.calculateMeanProfitMargin(p);\r\n      });\r\n\r\n    this.createPriceChart();\r\n    this.createStockChart();\r\n  }\r\n\r\n  // Cr√©ation du graphique d'√©volution des prix\r\n  createPriceChart() {\r\n    const ctx = document.getElementById('priceChart') as HTMLCanvasElement;\r\n    this.priceChart = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'], // Les mois\r\n        datasets: [\r\n          {\r\n            label: '√âvolution des prix',\r\n            data: [10, 12, 8, 14, 15, 10, 16], // Exemple de donn√©es\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 2,\r\n            fill: false,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  // Cr√©ation du graphique d'√©volution des stocks\r\n  createStockChart() {\r\n    const ctx = document.getElementById('stockChart') as HTMLCanvasElement;\r\n    this.stockChart = new Chart(ctx, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'], // Les mois\r\n        datasets: [\r\n          {\r\n            label: '√âvolution des stocks',\r\n            data: [50, 60, 40, 80, 45, 90, 100], // Exemple de donn√©es\r\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n            borderColor: 'rgba(153, 102, 255, 1)',\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  //calculate the total amount of stock\r\n  async calculateStockValue(p: ProductDocument[]): Promise<number> {\r\n    const result = await Promise.all(\r\n      p.map(\r\n        async (product) =>\r\n          (\r\n            await this.db.prices.getProductPrices(product)\r\n          )[(await this.db.prices.getProductPrices(product)).length - 1][\r\n            'buyingPrice'\r\n          ] *\r\n          (\r\n            await this.db.quantities.getProductQuantities(product)\r\n          )[\r\n            (await this.db.quantities.getProductQuantities(product)).length - 1\r\n          ]['stockQuantity']\r\n      )\r\n    );\r\n    return result.reduce((acc, num) => acc + num, 0);\r\n  }\r\n\r\n  //calculate the mean of prfit margin\r\n  async calculateMeanProfitMargin(p: ProductDocument[]): Promise<number> {\r\n    const result = await Promise.all(\r\n      p.map(\r\n        async (product) =>\r\n          (((\r\n            await this.db.prices.getProductPrices(product)\r\n          )[(await this.db.prices.getProductPrices(product)).length - 1][\r\n            'sellingPrice'\r\n          ] -\r\n            (\r\n              await this.db.prices.getProductPrices(product)\r\n            )[(await this.db.prices.getProductPrices(product)).length - 1][\r\n              'buyingPrice'\r\n            ]) /\r\n            (\r\n              await this.db.prices.getProductPrices(product)\r\n            )[(await this.db.prices.getProductPrices(product)).length - 1][\r\n              'sellingPrice'\r\n            ]) *\r\n          100\r\n      )\r\n    );\r\n    const resultPercent =\r\n      result.length === 0\r\n        ? 0\r\n        : Math.ceil(result.reduce((acc, num) => acc + num, 0) / result.length);\r\n    return resultPercent;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "canvas {\r\n  width: 100% !important;\r\n  height: 300px !important;\r\n}\r\n\r\nion-content {\r\n  --padding-top: 56px; /* Ajustez selon la hauteur de votre header */\r\n}\r\n\r\n/* Style g√©n√©ral des cartes */\r\nion-card {\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 16px;\r\n  margin: 16px 0;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  align-content: center;\r\n}\r\n\r\nion-card-header {\r\n  padding-top: 0%;\r\n  margin-top: 0%;\r\n}\r\nion-card-title {\r\n  align-content: center;\r\n  white-space: nowrap;\r\n  color: #2e2d2d; /* Couleur grise pour rendre le titre moins visible */\r\n}\r\n\r\nion-card-content h1 {\r\n  white-space: nowrap; /* Pas de retour √† la ligne */\r\n  overflow: hidden; /* Cache le texte qui d√©passe */\r\n  text-overflow: ellipsis; /* Ajoute \"...\" si le texte est trop long */\r\n  max-width: 100%; /* Le texte reste dans la largeur du conteneur */\r\n  font-size: calc(30px + 1vw); /* Ajustement dynamique de la taille du texte */\r\n  color: #3b5998;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Effet de survol (hover) */\r\nion-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n",
                    "styleUrl": "tab2.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "databaseService",
                        "type": "DatabaseService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-content [fullscreen]=\"true\">\r\n  <ion-grid class=\"ion-no-margin\">\r\n    <!-- Carte pour le total des produits -->\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-card>\r\n          <ion-card-header>\r\n            <ion-card-title>{{'PRODUCT.PRODUCTS'| translate}}</ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content class=\"ion-text-center\">\r\n            <h1>{{ productsNumber }}</h1>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n      <ion-col>\r\n        <ion-card>\r\n          <ion-card-header>\r\n            <ion-card-title>\r\n              {{'PRODUCT.MEANPROFITMARGIN'| translate}}\r\n            </ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content class=\"ion-text-center\">\r\n            <h1>{{ meanProfitMargin }} %</h1>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row class=\"ion-no-padding\">\r\n      <ion-col>\r\n        <ion-card>\r\n          <ion-card-header>\r\n            <ion-card-title>\r\n              {{'PRODUCT.STOCKVALUE'| translate}}\r\n            </ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content class=\"ion-text-center\">\r\n            <h1>{{stockValue | currency : \"Ar \" : \"symbol\" : \"1.0-0\"}}</h1>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n\r\n    <!-- Carte pour l'√©volution des prix -->\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-card>\r\n          <ion-card-header>\r\n            <ion-card-title>√âvolution des Prix</ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content>\r\n            <canvas id=\"priceChart\"></canvas>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n\r\n    <!-- Carte pour l'√©volution des stocks -->\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-card>\r\n          <ion-card-header>\r\n            <ion-card-title>√âvolution des Stocks</ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content>\r\n            <canvas id=\"stockChart\"></canvas>\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n"
        },
        {
            "name": "TabsPage",
            "id": "component-TabsPage-27325413ee81ada9fdd69a17465c9b3de259a251f32a42f12356beccb7dc1b6f028fa5c21ab4eae1cddc272c76e644e5a39d712c305e24b32bd4402ebcf64285",
            "file": "src/app/pages/products/tabs/tabs.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [
                "tabs.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "tabs.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "environmentInjector",
                    "defaultValue": "inject(EnvironmentInjector)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onTabChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonTabs"
                },
                {
                    "name": "IonTabBar"
                },
                {
                    "name": "IonTabButton"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonLabel"
                },
                {
                    "name": "TranslateModule",
                    "type": "module"
                },
                {
                    "name": "HearderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EnvironmentInjector, inject } from '@angular/core';\r\nimport {\r\n  IonTabs,\r\n  IonTabBar,\r\n  IonTabButton,\r\n  IonIcon,\r\n  IonLabel,\r\n} from '@ionic/angular/standalone';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { addIcons } from 'ionicons';\r\nimport { storefront, business } from 'ionicons/icons';\r\nimport { HearderComponent } from 'src/app/components/hearder/hearder.component';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: 'tabs.page.html',\r\n  styleUrls: ['tabs.page.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonTabs,\r\n    IonTabBar,\r\n    IonTabButton,\r\n    IonIcon,\r\n    IonLabel,\r\n    TranslateModule,\r\n    HearderComponent,\r\n  ],\r\n})\r\nexport class TabsPage {\r\n  public environmentInjector = inject(EnvironmentInjector);\r\n  currentTitle: any;\r\n\r\n  constructor() {\r\n    addIcons({ storefront, business });\r\n  }\r\n\r\n  onTabChange(event: any) {\r\n    const selectedTab = event.tab;\r\n    switch (selectedTab) {\r\n      case 'tab1':\r\n        this.currentTitle = 'PRODUCT.PRODUCTS';\r\n        break;\r\n      case 'tab2':\r\n        this.currentTitle = 'GLOBAL.HOME';\r\n        break;\r\n      default:\r\n        this.currentTitle = 'TSeNAKO';\r\n        break;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n",
                    "styleUrl": "tabs.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 31
            },
            "extends": [],
            "templateData": "<app-hearder pageTitle=\"{{currentTitle}}\"></app-hearder>\r\n\r\n<ion-tabs (ionTabsDidChange)=\"onTabChange($event)\">\r\n  <ion-tab-bar slot=\"bottom\" color=\"primary\">\r\n    <ion-tab-button tab=\"tab2\" href=\"/tabs/tab2\">\r\n      <ion-icon aria-hidden=\"true\" name=\"storefront\"></ion-icon>\r\n      <ion-label>{{'GLOBAL.HOME'| translate}}</ion-label>\r\n    </ion-tab-button>\r\n\r\n    <ion-tab-button tab=\"tab1\" href=\"/tabs/tab1\">\r\n      <ion-icon name=\"business\"></ion-icon>\r\n      <ion-label>{{'PRODUCT.PRODUCTS'| translate}}</ion-label>\r\n    </ion-tab-button>\r\n  </ion-tab-bar>\r\n</ion-tabs>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "DATE_NOW",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/database.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Date.now()"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "ID_PARTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/services/database.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "4"
            },
            {
                "name": "PriceSchema",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "RxJsonSchema<PriceDocType>",
                "defaultValue": "priceSchemaLiteral"
            },
            {
                "name": "priceSchemaLiteral",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/schemas/price.schema.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\r\n  title: 'price schema',\r\n  description: 'describes price evolution',\r\n  version: 0,\r\n  primaryKey: 'idPrice',\r\n  type: 'object',\r\n  properties: {\r\n    idPrice: {\r\n      type: 'string',\r\n      maxLength: 100, // <- the primary key must have set maxLength\r\n    },\r\n    idProduct: {\r\n      type: 'string',\r\n    },\r\n    buyingPrice: {\r\n      type: 'number',\r\n    },\r\n    sellingPrice: {\r\n      type: 'number',\r\n    },\r\n    profitMargin: {\r\n      type: 'number',\r\n    },\r\n    priceRegisteredDate: {\r\n      type: 'number',\r\n    },\r\n  },\r\n  attachments: {\r\n    encrypted: false,\r\n  },\r\n  required: ['idPrice'],\r\n  indexes: ['idPrice'],\r\n} as const"
            },
            {
                "name": "priceSchemaTyped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "toTypedRxJsonSchema(priceSchemaLiteral)"
            },
            {
                "name": "ProductSchema",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "RxJsonSchema<ProductDocType>",
                "defaultValue": "productSchemaLiteral"
            },
            {
                "name": "productSchemaLiteral",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/schemas/product.schema.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\r\n  title: 'product schema',\r\n  description: 'describes a product',\r\n  version: 0,\r\n  primaryKey: 'idProduct',\r\n  type: 'object',\r\n  properties: {\r\n    idProduct: {\r\n      type: 'string',\r\n      maxLength: 100, // <- the primary key must have set maxLength\r\n    },\r\n    name: {\r\n      type: 'string',\r\n    },\r\n    description: {\r\n      type: 'string',\r\n    },\r\n    category: {\r\n      type: 'string',\r\n    },\r\n    conditionningType: {\r\n      type: 'string',\r\n    },\r\n  },\r\n  attachments: {\r\n    encrypted: false,\r\n  },\r\n  required: ['idProduct', 'name'],\r\n  indexes: ['idProduct'],\r\n} as const"
            },
            {
                "name": "productSchemaTyped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "toTypedRxJsonSchema(productSchemaLiteral)"
            },
            {
                "name": "QuantitySchema",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "RxJsonSchema<QuantityDocType>",
                "defaultValue": "quantitySchemaLiteral"
            },
            {
                "name": "quantitySchemaLiteral",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/schemas/quantity.schema.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\r\n  title: 'quantity schema',\r\n  description: 'describes products quantity like stock, supply and sold',\r\n  version: 0,\r\n  primaryKey: 'idQuantity',\r\n  type: 'object',\r\n  properties: {\r\n    idQuantity: {\r\n      type: 'string',\r\n      maxLength: 100, // <- the primary key must have set maxLength\r\n    },\r\n    idProduct: {\r\n      type: 'string',\r\n    },\r\n    stockQuantity: {\r\n      type: 'number',\r\n    },\r\n    supplyQuantity: {\r\n      type: 'number',\r\n    },\r\n    soldQuantity: {\r\n      type: 'number',\r\n    },\r\n    quantityRegisteredDate: {\r\n      type: 'number',\r\n    },\r\n  },\r\n  attachments: {\r\n    encrypted: false,\r\n  },\r\n  required: ['idQuantity'],\r\n  indexes: ['idQuantity'],\r\n} as const"
            },
            {
                "name": "quantitySchemaTyped",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "toTypedRxJsonSchema(quantitySchemaLiteral)"
            }
        ],
        "functions": [
            {
                "name": "createTranslateLoader",
                "file": "src/main.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "handler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "handler",
                        "type": "HttpBackend",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Database",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "RxDatabase<DatabaseCollections>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "DatabaseCollections",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "PriceCollection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "RxCollection<PriceDocType | PriceDocMethods | PriceCollectionMethods>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "PriceCollectionMethods",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "PriceDocMethods",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "PriceDocType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ExtractDocumentTypeFromTypedRxJsonSchema<>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "PriceDocument",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "RxDocument<PriceDocType | PriceDocMethods>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ProductCollection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "RxCollection<ProductDocType | ProductDocMethods | ProductCollectionMethods>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ProductCollectionMethods",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ProductDocMethods",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ProductDocType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ExtractDocumentTypeFromTypedRxJsonSchema<>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ProductDocument",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "RxDocument<ProductDocType | ProductDocMethods>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "QuantityCollection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "RxCollection<QuantityDocType | QuantityDocMethods | QuantityCollectionMethods>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "QuantityCollectionMethods",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "QuantityDocMethods",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "QuantityDocType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ExtractDocumentTypeFromTypedRxJsonSchema<>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "QuantityDocument",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "RxDocument<QuantityDocType | QuantityDocMethods>",
                "file": "src/app/types/app.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/services/database.service.ts": [
                {
                    "name": "DATE_NOW",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/database.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Date.now()"
                },
                {
                    "name": "ID_PARTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/services/database.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "4"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/types/app.types.ts": [
                {
                    "name": "PriceSchema",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RxJsonSchema<PriceDocType>",
                    "defaultValue": "priceSchemaLiteral"
                },
                {
                    "name": "priceSchemaTyped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "toTypedRxJsonSchema(priceSchemaLiteral)"
                },
                {
                    "name": "ProductSchema",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RxJsonSchema<ProductDocType>",
                    "defaultValue": "productSchemaLiteral"
                },
                {
                    "name": "productSchemaTyped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "toTypedRxJsonSchema(productSchemaLiteral)"
                },
                {
                    "name": "QuantitySchema",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RxJsonSchema<QuantityDocType>",
                    "defaultValue": "quantitySchemaLiteral"
                },
                {
                    "name": "quantitySchemaTyped",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "toTypedRxJsonSchema(quantitySchemaLiteral)"
                }
            ],
            "src/app/schemas/price.schema.ts": [
                {
                    "name": "priceSchemaLiteral",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/schemas/price.schema.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\r\n  title: 'price schema',\r\n  description: 'describes price evolution',\r\n  version: 0,\r\n  primaryKey: 'idPrice',\r\n  type: 'object',\r\n  properties: {\r\n    idPrice: {\r\n      type: 'string',\r\n      maxLength: 100, // <- the primary key must have set maxLength\r\n    },\r\n    idProduct: {\r\n      type: 'string',\r\n    },\r\n    buyingPrice: {\r\n      type: 'number',\r\n    },\r\n    sellingPrice: {\r\n      type: 'number',\r\n    },\r\n    profitMargin: {\r\n      type: 'number',\r\n    },\r\n    priceRegisteredDate: {\r\n      type: 'number',\r\n    },\r\n  },\r\n  attachments: {\r\n    encrypted: false,\r\n  },\r\n  required: ['idPrice'],\r\n  indexes: ['idPrice'],\r\n} as const"
                }
            ],
            "src/app/schemas/product.schema.ts": [
                {
                    "name": "productSchemaLiteral",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/schemas/product.schema.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\r\n  title: 'product schema',\r\n  description: 'describes a product',\r\n  version: 0,\r\n  primaryKey: 'idProduct',\r\n  type: 'object',\r\n  properties: {\r\n    idProduct: {\r\n      type: 'string',\r\n      maxLength: 100, // <- the primary key must have set maxLength\r\n    },\r\n    name: {\r\n      type: 'string',\r\n    },\r\n    description: {\r\n      type: 'string',\r\n    },\r\n    category: {\r\n      type: 'string',\r\n    },\r\n    conditionningType: {\r\n      type: 'string',\r\n    },\r\n  },\r\n  attachments: {\r\n    encrypted: false,\r\n  },\r\n  required: ['idProduct', 'name'],\r\n  indexes: ['idProduct'],\r\n} as const"
                }
            ],
            "src/app/schemas/quantity.schema.ts": [
                {
                    "name": "quantitySchemaLiteral",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/schemas/quantity.schema.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\r\n  title: 'quantity schema',\r\n  description: 'describes products quantity like stock, supply and sold',\r\n  version: 0,\r\n  primaryKey: 'idQuantity',\r\n  type: 'object',\r\n  properties: {\r\n    idQuantity: {\r\n      type: 'string',\r\n      maxLength: 100, // <- the primary key must have set maxLength\r\n    },\r\n    idProduct: {\r\n      type: 'string',\r\n    },\r\n    stockQuantity: {\r\n      type: 'number',\r\n    },\r\n    supplyQuantity: {\r\n      type: 'number',\r\n    },\r\n    soldQuantity: {\r\n      type: 'number',\r\n    },\r\n    quantityRegisteredDate: {\r\n      type: 'number',\r\n    },\r\n  },\r\n  attachments: {\r\n    encrypted: false,\r\n  },\r\n  required: ['idQuantity'],\r\n  indexes: ['idQuantity'],\r\n} as const"
                }
            ]
        },
        "groupedFunctions": {
            "src/main.ts": [
                {
                    "name": "createTranslateLoader",
                    "file": "src/main.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "handler",
                            "type": "HttpBackend",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "handler",
                            "type": "HttpBackend",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/types/app.types.ts": [
                {
                    "name": "Database",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "RxDatabase<DatabaseCollections>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "DatabaseCollections",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "PriceCollection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "RxCollection<PriceDocType | PriceDocMethods | PriceCollectionMethods>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "PriceCollectionMethods",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "PriceDocMethods",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "PriceDocType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ExtractDocumentTypeFromTypedRxJsonSchema<>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "PriceDocument",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "RxDocument<PriceDocType | PriceDocMethods>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "ProductCollection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "RxCollection<ProductDocType | ProductDocMethods | ProductCollectionMethods>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "ProductCollectionMethods",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "ProductDocMethods",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "ProductDocType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ExtractDocumentTypeFromTypedRxJsonSchema<>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "ProductDocument",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "RxDocument<ProductDocType | ProductDocMethods>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "QuantityCollection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "RxCollection<QuantityDocType | QuantityDocMethods | QuantityCollectionMethods>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "QuantityCollectionMethods",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "QuantityDocMethods",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "QuantityDocType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ExtractDocumentTypeFromTypedRxJsonSchema<>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "QuantityDocument",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "RxDocument<QuantityDocType | QuantityDocMethods>",
                    "file": "src/app/types/app.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/calculator/calculator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalculatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/custom-select/custom-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/hearder/hearder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HearderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/i18-n/i18-n.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "I18NComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/kebab-menu/kebab-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KebabMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/photo/photo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhotoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-card/product-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-insert/product-insert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductInsertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-stats/product-stats.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductStatsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/components/products-list/products-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/add-list-attribute.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AddListAttributeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/longpress.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "LongpressDirective",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/products/tab1/tab1.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "Tab1Page",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/products/tab2/tab2.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "Tab2Page",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/products/tabs/tabs.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsPage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/schemas/price.schema.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "priceSchemaLiteral",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/schemas/product.schema.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productSchemaLiteral",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/schemas/quantity.schema.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "quantitySchemaLiteral",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/database.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DatabaseService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/database.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DATE_NOW",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/database.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ID_PARTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PriceSchema",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "priceSchemaTyped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductSchema",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "productSchemaTyped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "QuantitySchema",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "quantitySchemaTyped",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Database",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "DatabaseCollections",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "PriceCollection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "PriceCollectionMethods",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "PriceDocMethods",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "PriceDocType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "PriceDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ProductCollection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ProductCollectionMethods",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ProductDocMethods",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ProductDocType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ProductDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "QuantityCollection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "QuantityCollectionMethods",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "QuantityDocMethods",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "QuantityDocType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types/app.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "QuantityDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createTranslateLoader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}